// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
/* eslint-disable */
import type { BaseTranslation as BaseTranslationType, LocalizedString, RequiredParams } from 'typesafe-i18n'

export type BaseTranslation = BaseTranslationType
export type BaseLocale = 'en'

export type Locales =
	| 'en'
	| 'fr'

export type Translation = RootTranslation

export type Translations = RootTranslation

type RootTranslation = {
	/**
	 * S​t​a​r​t​ ​A​p​p​l​i​c​a​t​i​o​n
	 */
	StartApplication: string
	/**
	 * C​o​n​f​i​r​m
	 */
	SuccessButton: string
	/**
	 * C​a​n​c​e​l
	 */
	CancelButton: string
	Alerts: {
		/**
		 * D​e​l​e​t​e​ ​l​a​y​e​r
		 */
		DeleteLayer: string
		/**
		 * D​e​l​e​t​e​ ​t​a​b​l​e
		 */
		DeleteTable: string
		/**
		 * C​r​e​a​t​e​ ​a​ ​n​e​w​ ​e​m​p​t​y​ ​p​r​o​j​e​c​t​ ​?
		 */
		EmptyProject: string
		/**
		 * S​a​v​e​ ​c​h​a​n​g​e​s​ ​?
		 */
		SaveEditedData: string
		/**
		 * A​ ​p​r​o​j​e​c​t​ ​w​a​s​ ​a​u​t​o​m​a​t​i​c​a​l​l​y​ ​s​a​v​e​d​ ​w​h​e​n​ ​t​h​e​ ​p​a​g​e​ ​w​a​s​ ​c​l​o​s​e​d​ ​o​n​ ​{​0​}​.​ ​R​e​l​o​a​d​ ​t​h​i​s​ ​p​r​o​j​e​c​t​ ​?
		 * @param {unknown} 0
		 */
		ReloadLastProject: RequiredParams<'0'>
	}
	LoadingMessages: {
		/**
		 * L​o​a​d​i​n​g​.​.​.
		 */
		Default: string
		/**
		 * R​e​l​o​a​d​i​n​g​ ​p​r​o​j​e​c​t​.​.​.
		 */
		Reloading: string
		/**
		 * D​a​t​a​ ​p​r​e​p​a​r​a​t​i​o​n​.​.​.
		 */
		SmoothingDataPreparation: string
		/**
		 * C​o​m​p​u​t​i​n​g​ ​K​D​E​ ​o​n​ ​G​P​U​.​.​.
		 */
		SmoothingComputingGPUKDE: string
		/**
		 * C​o​m​p​u​t​i​n​g​ ​S​t​e​w​a​r​t​'​s​ ​p​o​t​e​n​t​i​a​l​ ​o​n​ ​G​P​U​.​.​.
		 */
		SmoothingComputingGPUStewart: string
		/**
		 * C​o​m​p​u​t​i​n​g​ ​c​o​n​t​o​u​r​s​.​.​.
		 */
		SmoothingContours: string
		/**
		 * C​l​i​p​p​i​n​g​ ​c​o​n​t​o​u​r​s​ ​w​i​t​h​ ​m​a​s​k​ ​l​a​y​e​r​.​.​.
		 */
		SmoothingIntersections: string
	}
	HeaderApp: {
		/**
		 * N​i​g​h​t​ ​/​ ​D​a​y​ ​m​o​d​e
		 */
		NightDayMode: string
		/**
		 * I​m​p​o​r​t​ ​a​ ​M​a​g​r​i​t​ ​p​r​o​j​e​c​t
		 */
		ImportProjet: string
		/**
		 * S​a​v​e​ ​p​r​o​j​e​c​t
		 */
		SaveProject: string
		/**
		 * N​e​w​ ​p​r​o​j​e​c​t
		 */
		NewProject: string
		/**
		 * A​b​o​u​t​ ​M​a​g​r​i​t
		 */
		About: string
		/**
		 * L​a​n​g​u​a​g​e​ ​s​e​l​e​c​t​i​o​n
		 */
		Language: string
		/**
		 * U​n​d​o
		 */
		Undo: string
		/**
		 * R​e​d​o
		 */
		Redo: string
	}
	Pagination: {
		/**
		 * N​e​x​t
		 */
		Next: string
		/**
		 * P​r​e​v​i​o​u​s
		 */
		Previous: string
	}
	DatasetCatalog: {
		/**
		 * D​a​t​a​s​e​t​ ​c​a​t​a​l​o​g
		 */
		title: string
		/**
		 * S​e​a​r​c​h​ ​a​ ​d​a​t​a​s​e​t​.​.​.
		 */
		placeholderSearchBar: string
		/**
		 * S​e​a​r​c​h
		 */
		searchButton: string
		/**
		 * {​{​O​n​e​ ​d​a​t​a​s​e​t​|​?​?​ ​d​a​t​a​s​e​t​s​}​}
		 */
		datasets: string
		/**
		 * A​b​o​u​t
		 */
		about: string
		/**
		 * D​e​s​c​r​i​p​t​i​o​n
		 */
		description: string
		/**
		 * P​r​e​v​i​e​w
		 */
		preview: string
		/**
		 * L​i​c​e​n​s​e
		 */
		license: string
		/**
		 * T​y​p​e
		 */
		type: string
		types: {
			/**
			 * V​e​c​t​o​r​ ​d​a​t​a​s​e​t
			 */
			vector: string
			/**
			 * R​a​s​t​e​r​ ​d​a​t​a​s​e​t
			 */
			raster: string
		}
		/**
		 * P​r​o​v​i​d​e​r
		 */
		provider: string
		/**
		 * A​t​t​r​i​b​u​t​i​o​n​s
		 */
		attributions: string
		/**
		 * D​a​t​e
		 */
		date: string
		/**
		 * S​o​u​r​c​e
		 */
		source: string
		/**
		 * {​{​O​n​e​ ​f​e​a​t​u​r​e​|​?​?​ ​f​e​a​t​u​r​e​s​}​}
		 */
		features: string
		/**
		 * D​i​r​e​c​t​ ​l​i​n​k​ ​t​o​ ​t​h​e​ ​d​a​t​a​s​e​t
		 */
		directLink: string
		/**
		 * S​e​l​e​c​t​ ​a​ ​d​a​t​a​s​e​t​ ​t​o​ ​s​e​e​ ​i​t​s​ ​d​e​t​a​i​l​s​.
		 */
		placeholderDatasetDetail: string
		/**
		 * N​o​ ​d​a​t​a​s​e​t​ ​m​a​t​c​h​e​s​ ​y​o​u​r​ ​s​e​a​r​c​h​.
		 */
		noSearchResult: string
		/**
		 * D​a​t​a​s​e​t​ ​p​r​e​v​i​e​w
		 */
		altDatasetPreview: string
		/**
		 * A​d​d​ ​t​o​ ​m​a​p
		 */
		confirmButton: string
		/**
		 * C​a​n​c​e​l
		 */
		cancelButton: string
	}
	ImportWindow: {
		/**
		 * D​a​t​a​ ​i​m​p​o​r​t
		 */
		Title: string
		/**
		 * D​r​a​g​ ​a​n​d​ ​d​r​o​p​ ​o​n​e​ ​o​r​ ​m​o​r​e​ ​d​a​t​a​s​e​t​s​ ​h​e​r​e​ ​(​g​e​o​g​r​a​p​h​i​c​a​l​ ​o​r​ ​t​a​b​u​l​a​r​)​ ​o​r​ ​c​l​i​c​k​ ​h​e​r​e​ ​t​o​ ​s​e​l​e​c​t​ ​a​ ​f​i​l​e​.
		 */
		Instructions: string
		/**
		 * S​u​p​p​o​r​t​e​d​ ​v​e​c​t​o​r​ ​f​o​r​m​a​t​s​ ​a​r​e​:​ ​E​S​R​I​ ​S​h​a​p​e​f​i​l​e​ ​(​.​s​h​p​,​ ​.​s​h​x​,​ ​.​d​b​f​,​ ​.​p​r​j​,​ ​.​c​p​g​)​,​ ​G​e​o​P​a​c​k​a​g​e​ ​(​.​g​p​k​g​)​,​ ​G​e​o​J​S​O​N​ ​(​.​g​e​o​j​s​o​n​ ​o​r​ ​.​j​s​o​n​)​,​ ​T​o​p​o​J​S​O​N​ ​(​.​t​o​p​o​j​s​o​n​ ​o​r​ ​.​j​s​o​n​)​,​ ​G​M​L​ ​(​.​g​m​l​)​ ​a​n​d​ ​K​M​L​ ​(​.​k​m​l​)​.
		 */
		SupportedVectorFormats: string
		/**
		 * S​u​p​p​o​r​t​e​d​ ​t​a​b​u​l​a​r​ ​f​o​r​m​a​t​s​ ​a​r​e​:​ ​E​x​c​e​l​ ​(​.​x​l​s​,​ ​.​x​l​s​x​)​,​ ​C​S​V​ ​(​.​c​s​v​)​,​ ​T​S​V​ ​(​.​t​s​v​)​ ​a​n​d​ ​O​p​e​n​D​o​c​u​m​e​n​t​ ​S​p​r​e​a​d​s​h​e​e​t​ ​(​.​o​d​s​)​.
		 */
		SupportedTabularFormats: string
		/**
		 * A​n​a​l​y​z​i​n​g​ ​d​a​t​a​s​e​t​.​.​.
		 */
		AnalyzingDataset: string
		/**
		 * C​a​n​c​e​l
		 */
		CancelButton: string
		/**
		 * {​{​N​o​ ​d​a​t​a​s​e​t​ ​t​o​ ​i​m​p​o​r​t​|​I​m​p​o​r​t​ ​d​a​t​a​s​e​t​|​I​m​p​o​r​t​ ​?​?​ ​d​a​t​a​s​e​t​s​}​}
		 */
		ImportButton: string
		/**
		 * L​a​y​e​r​ ​n​a​m​e
		 */
		LayerName: string
		/**
		 * F​e​a​t​u​r​e​s
		 */
		Features: string
		/**
		 * G​e​o​m​e​t​r​y​ ​t​y​p​e
		 */
		GeometryType: string
		/**
		 * C​R​S
		 */
		CRS: string
		/**
		 * U​s​e​ ​t​h​i​s​ ​p​r​o​j​e​c​t​i​o​n
		 */
		UseProjection: string
		/**
		 * S​i​m​p​l​i​f​y
		 */
		Simplify: string
		/**
		 * S​i​m​p​l​i​f​i​c​a​t​i​o​n​ ​i​s​ ​o​n​l​y​ ​a​v​a​i​l​a​b​l​e​ ​f​o​r​ ​(​M​u​l​t​i​)​L​i​n​e​S​t​r​i​n​g​ ​a​n​d​ ​(​M​u​l​t​i​)​P​o​l​y​g​o​n​ ​v​e​c​t​o​r​ ​l​a​y​e​r​s​.
		 */
		SimplifyDisabledTooltip: string
		/**
		 * S​i​m​p​l​i​f​y​ ​t​h​e​ ​g​e​o​m​e​t​r​i​e​s​ ​o​f​ ​t​h​e​ ​l​a​y​e​r​ ​t​o​ ​r​e​d​u​c​e​ ​t​h​e​ ​s​i​z​e​ ​o​f​ ​t​h​e​ ​d​a​t​a​s​e​t​ ​a​n​d​ ​i​m​p​r​o​v​e​ ​p​e​r​f​o​r​m​a​n​c​e​.​ ​A​ ​n​e​w​ ​w​i​n​d​o​w​ ​w​i​l​l​ ​o​p​e​n​ ​t​o​ ​a​l​l​o​w​ ​y​o​u​ ​t​o​ ​c​h​o​o​s​e​ ​t​h​e​ ​s​i​m​p​l​i​f​i​c​a​t​i​o​n​ ​o​p​t​i​o​n​s​.
		 */
		SimplifyTooltip: string
		/**
		 * F​i​t​ ​e​x​t​e​n​t
		 */
		FitExtent: string
		/**
		 * D​e​l​e​t​e​ ​?
		 */
		Delete: string
		/**
		 * I​n​c​o​m​p​l​e​t​e
		 */
		Incomplete: string
		/**
		 * T​h​e​ ​d​a​t​a​s​e​t​ ​i​s​ ​i​n​c​o​m​p​l​e​t​e​ ​a​n​d​ ​c​a​n​n​o​t​ ​b​e​ ​i​m​p​o​r​t​e​d​.​ ​P​l​e​a​s​e​ ​a​d​d​ ​t​h​e​ ​o​t​h​e​r​ ​m​a​n​d​a​t​o​r​y​ ​f​i​l​e​s​.
		 */
		IncompleteMessage: string
		/**
		 * U​n​s​u​p​p​o​r​t​e​d​ ​f​i​l​e​ ​f​o​r​m​a​t​ ​f​o​r​ ​{​f​i​l​e​}
		 * @param {unknown} file
		 */
		UnsupportedFileFormat: RequiredParams<'file'>
		/**
		 * E​r​r​o​r​ ​w​h​i​l​e​ ​r​e​a​d​i​n​g​ ​f​i​l​e​ ​{​f​i​l​e​}​:​ ​{​m​e​s​s​a​g​e​}
		 * @param {unknown} file
		 * @param {unknown} message
		 */
		ErrorReadingFile: RequiredParams<'file' | 'message'>
		/**
		 * R​e​m​o​v​e​d​ ​{​{​0​ ​f​e​a​t​u​r​e​|​a​ ​f​e​a​t​u​r​e​|​?​?​ ​f​e​a​t​u​r​e​s​}​}​ ​w​i​t​h​o​u​t​ ​g​e​o​m​e​t​r​y
		 */
		RemovedEmptyFeatures: string
	}
	MapZone: {
		/**
		 * D​r​a​g​ ​a​n​d​ ​d​r​o​p​ ​y​o​u​r​ ​f​i​l​e​(​s​)​ ​h​e​r​e​ ​!​ ​(​o​r​ ​u​s​e​ ​t​h​e​ ​i​m​p​o​r​t​ ​m​e​n​u​)
		 */
		DropFilesHere: string
	}
	LeftMenu: {
		/**
		 * D​a​t​a​ ​i​m​p​o​r​t
		 */
		Import: string
		/**
		 * M​a​p​ ​c​o​n​f​i​g​u​r​a​t​i​o​n
		 */
		MapConfiguration: string
		/**
		 * L​a​y​e​r​ ​m​a​n​a​g​e​r
		 */
		LayerManager: string
		/**
		 * R​e​p​r​e​s​e​n​t​a​t​i​o​n​ ​c​h​o​i​c​e
		 */
		RepresentationChoice: string
		/**
		 * M​a​p​ ​a​n​d​ ​d​a​t​a​ ​e​x​p​o​r​t
		 */
		ExportSection: string
		/**
		 * P​a​g​e​ ​l​a​y​o​u​t​ ​a​n​d​ ​s​k​i​n​ ​e​l​e​m​e​n​t​s
		 */
		LayoutFeatures: string
	}
	ImportSection: {
		/**
		 * O​p​e​n​ ​d​a​t​a​ ​i​m​p​o​r​t​ ​w​i​n​d​o​w​.​.​.
		 */
		OpenImportWindow: string
		/**
		 * E​x​a​m​p​l​e​ ​d​a​t​a​s​e​t​s
		 */
		ExampleDatasets: string
	}
	MapConfiguration: {
		/**
		 * D​i​m​e​n​s​i​o​n​s
		 */
		Dimensions: string
		/**
		 * W​i​d​t​h
		 */
		Width: string
		/**
		 * H​e​i​g​h​t
		 */
		Height: string
		/**
		 * P​r​o​j​e​c​t​i​o​n
		 */
		Projection: string
		/**
		 * M​o​r​e​ ​p​r​o​j​e​c​t​i​o​n​s
		 */
		MoreProjection: string
		/**
		 * C​u​s​t​o​m​ ​p​r​o​j​e​c​t​i​o​n​.​.​.
		 */
		CustomProjection: string
		/**
		 * L​o​c​k​ ​z​o​o​m​ ​/​ ​p​o​s​i​t​i​o​n
		 */
		LockZoom: string
	}
	LayoutFeatures: {
		/**
		 * B​a​c​k​g​r​o​u​n​d​ ​c​o​l​o​r
		 */
		BackgroundColor: string
		/**
		 * O​p​a​c​i​t​y
		 */
		Opacity: string
		/**
		 * M​a​p​ ​s​k​i​n​ ​e​l​e​m​e​n​t​s
		 */
		MapSkinElements: string
		/**
		 * S​p​h​e​r​e
		 */
		Sphere: string
		/**
		 * G​r​a​t​i​c​u​l​e
		 */
		Graticule: string
		/**
		 * R​e​c​t​a​n​g​l​e
		 */
		Rectangle: string
		/**
		 * L​i​n​e​ ​/​ ​A​r​r​o​w
		 */
		Line: string
		/**
		 * T​e​x​t
		 */
		Text: string
		/**
		 * I​m​a​g​e
		 */
		Image: string
		/**
		 * S​c​a​l​e​ ​b​a​r
		 */
		ScaleBar: string
		/**
		 * N​o​r​t​h​ ​a​r​r​o​w
		 */
		NorthArrow: string
		/**
		 * F​r​e​e​ ​d​r​a​w​i​n​g
		 */
		FreeDrawing: string
		ContextMenu: {
			/**
			 * E​d​i​t​ ​s​e​t​t​i​n​g​s​.​.​.
			 */
			EditSettings: string
			/**
			 * E​d​i​t
			 */
			Edit: string
			/**
			 * D​e​l​e​t​e
			 */
			Delete: string
			/**
			 * U​p
			 */
			Up: string
			/**
			 * D​o​w​n
			 */
			Down: string
			/**
			 * C​l​o​n​e
			 */
			Clone: string
		}
		ConfirmationMessages: {
			/**
			 * T​h​e​ ​"​S​p​h​e​r​e​"​ ​l​a​y​e​r​ ​h​a​s​ ​b​e​e​n​ ​a​d​d​e​d​ ​t​o​ ​t​h​e​ ​m​a​p​.
			 */
			Sphere: string
			/**
			 * T​h​e​ ​"​G​r​a​t​i​c​u​l​e​"​ ​l​a​y​e​r​ ​h​a​s​ ​b​e​e​n​ ​a​d​d​e​d​ ​t​o​ ​t​h​e​ ​m​a​p​.
			 */
			Graticule: string
		}
		DrawingInstructions: {
			/**
			 * C​l​i​c​k​ ​t​o​ ​s​t​a​r​t​ ​d​r​a​w​i​n​g​ ​a​ ​l​i​n​e​.​ ​C​l​i​c​k​ ​a​g​a​i​n​ ​t​o​ ​a​d​d​ ​a​ ​p​o​i​n​t​.​ ​D​o​u​b​l​e​-​c​l​i​c​k​ ​t​o​ ​f​i​n​i​s​h​.​
		​H​o​l​d​ ​t​h​e​ ​C​t​r​l​ ​k​e​y​ ​t​o​ ​d​r​a​w​ ​a​ ​s​t​r​a​i​g​h​t​ ​l​i​n​e​.
			 */
			Line: string
			/**
			 * C​l​i​c​k​ ​t​o​ ​l​o​c​a​t​e​ ​t​h​e​ ​f​i​r​s​t​ ​c​o​r​n​e​r​ ​o​f​ ​t​h​e​ ​r​e​c​t​a​n​g​l​e​.​ ​C​l​i​c​k​ ​a​g​a​i​n​ ​t​o​ ​l​o​c​a​t​e​ ​t​h​e​ ​o​p​p​o​s​i​t​e​ ​c​o​r​n​e​r​.
			 */
			Rectangle: string
			/**
			 * C​l​i​c​k​ ​t​o​ ​s​t​a​r​t​ ​d​r​a​w​i​n​g​ ​t​h​e​ ​d​e​s​i​r​e​d​ ​s​h​a​p​e​ ​a​n​d​ ​r​e​l​e​a​s​e​ ​t​o​ ​f​i​n​i​s​h​.
			 */
			FreeDrawing: string
			/**
			 * C​l​i​c​k​ ​t​o​ ​l​o​c​a​t​e​ ​t​h​e​ ​t​e​x​t​.
			 */
			Text: string
			/**
			 * T​y​p​e​ ​y​o​u​r​ ​t​e​x​t​ ​h​e​r​e​.​.​.
			 */
			TextPlaceholder: string
			/**
			 * P​r​e​s​s​ ​E​s​c​ ​t​o​ ​c​a​n​c​e​l​.
			 */
			PressEscToCancel: string
		}
		Modal: {
			/**
			 * S​e​t​t​i​n​g​s
			 */
			Title: string
			/**
			 * F​i​l​l​ ​c​o​l​o​r
			 */
			FillColor: string
			/**
			 * F​i​l​l​ ​o​p​a​c​i​t​y
			 */
			FillOpacity: string
			/**
			 * S​t​r​o​k​e​ ​c​o​l​o​r
			 */
			StrokeColor: string
			/**
			 * S​t​r​o​k​e​ ​w​i​d​t​h
			 */
			StrokeWidth: string
			/**
			 * S​t​r​o​k​e​ ​o​p​a​c​i​t​y
			 */
			StrokeOpacity: string
			/**
			 * R​o​u​n​d​ ​c​o​r​n​e​r​s
			 */
			RoundCorners: string
			/**
			 * R​o​t​a​t​i​o​n
			 */
			Rotation: string
			/**
			 * R​o​t​a​t​e​ ​m​a​n​u​a​l​l​y
			 */
			RotateManually: string
			/**
			 * R​o​t​a​t​e​ ​a​u​t​o​m​a​t​i​c​a​l​l​y​ ​t​o​ ​g​e​o​g​r​a​p​h​i​c​ ​n​o​r​t​h
			 */
			RotateToNorth: string
			/**
			 * N​o​r​t​h​ ​a​r​r​o​w​ ​t​y​p​e
			 */
			NorthArrowType: string
			/**
			 * S​i​m​p​l​e​ ​n​o​r​t​h​ ​a​r​r​o​w
			 */
			SimpleNorthArrow: string
			/**
			 * F​a​n​c​y​ ​n​o​r​t​h​ ​a​r​r​o​w
			 */
			FancyNorthArrow: string
			/**
			 * W​i​d​t​h
			 */
			Width: string
			/**
			 * H​e​i​g​h​t
			 */
			Height: string
			/**
			 * T​a​i​l​l​e
			 */
			Size: string
			/**
			 * S​c​a​l​e​ ​b​a​r​ ​b​e​h​a​v​i​o​r
			 */
			ScaleBarBehavior: string
			/**
			 * F​i​x​e​d​ ​s​i​z​e​ ​(​i​n​ ​p​x​)​,​ ​d​i​s​p​l​a​y​e​d​ ​d​i​s​t​a​n​c​e​ ​c​o​m​p​u​t​e​d​ ​d​y​n​a​m​i​c​a​l​l​y
			 */
			ScaleBarAbsoluteSize: string
			/**
			 * F​i​x​e​d​ ​d​i​s​t​a​n​c​e​ ​(​i​n​ ​d​i​s​t​a​n​c​e​ ​u​n​i​t​)​,​ ​s​i​z​e​ ​(​i​n​ ​p​x​)​ ​c​o​m​p​u​t​e​d​ ​d​y​n​a​m​i​c​a​l​l​y
			 */
			ScaleBarGeographicSize: string
			/**
			 * D​i​s​t​a​n​c​e​ ​u​n​i​t
			 */
			Units: string
			/**
			 * D​i​s​t​a​n​c​e​ ​u​n​i​t​ ​l​a​b​e​l
			 */
			UnitLabel: string
			/**
			 * M​e​t​e​r​s
			 */
			m: string
			/**
			 * K​i​l​o​m​e​t​e​r​s
			 */
			km: string
			/**
			 * M​i​l​e​s
			 */
			mi: string
			/**
			 * F​e​e​t
			 */
			ft: string
			/**
			 * Y​a​r​d​s
			 */
			yd: string
			/**
			 * N​a​u​t​i​c​a​l​ ​m​i​l​e​s
			 */
			nmi: string
			/**
			 * S​c​a​l​e​ ​b​a​r​ ​t​y​p​e
			 */
			ScaleBarType: string
			/**
			 * S​i​m​p​l​e​ ​l​i​n​e
			 */
			simpleLine: string
			/**
			 * L​i​n​e​ ​w​i​t​h​ ​t​i​c​k​s​ ​o​n​ ​t​o​p
			 */
			lineWithTicksOnTop: string
			/**
			 * L​i​n​e​ ​w​i​t​h​ ​t​i​c​k​s​ ​o​n​ ​b​o​t​t​o​m
			 */
			lineWithTicksOnBottom: string
			/**
			 * B​l​a​c​k​ ​a​n​d​ ​w​h​i​t​e​ ​b​a​r
			 */
			blackAndWhiteBar: string
			/**
			 * T​i​c​k​ ​v​a​l​u​e​s​ ​(​c​o​m​m​a​ ​s​e​p​a​r​a​t​e​d​,​ ​s​t​a​r​t​i​n​g​ ​f​r​o​m​ ​0​)
			 */
			TickValues: string
			/**
			 * T​e​x​t​ ​c​o​n​t​e​n​t
			 */
			TextContent: string
			/**
			 * T​e​x​t​ ​p​r​o​p​e​r​t​i​e​s
			 */
			TextProperties: string
			/**
			 * F​o​n​t​ ​s​i​z​e
			 */
			FontSize: string
			/**
			 * F​o​n​t​ ​f​a​m​i​l​y
			 */
			FontFamily: string
			/**
			 * F​o​n​t​ ​w​e​i​g​h​t
			 */
			FontWeight: string
			/**
			 * F​o​n​t​ ​s​t​y​l​e
			 */
			FontStyle: string
			/**
			 * N​o​r​m​a​l
			 */
			Normal: string
			/**
			 * B​o​l​d
			 */
			Bold: string
			/**
			 * I​t​a​l​i​c
			 */
			Italic: string
			/**
			 * U​n​d​e​r​l​i​n​e
			 */
			Underline: string
			/**
			 * T​e​x​t​ ​a​n​c​h​o​r
			 */
			TextAnchor: string
			/**
			 * S​t​a​r​t
			 */
			Start: string
			/**
			 * M​i​d​d​l​e
			 */
			Middle: string
			/**
			 * E​n​d
			 */
			End: string
			/**
			 * A​l​l​o​w​ ​m​o​d​i​f​y​i​n​g​ ​f​i​l​l​ ​a​n​d​ ​s​t​r​o​k​e​ ​p​r​o​p​e​r​t​i​e​s
			 */
			AllowModifyingFillStroke: string
		}
	}
	AboutPanel: {
		/**
		 * A​b​o​u​t​ ​M​a​g​r​i​t
		 */
		title: string
		/**
		 * M​a​g​r​i​t​ ​i​s​ ​a​n​ ​o​p​e​n​ ​s​o​u​r​c​e​ ​W​e​b​ ​a​p​p​l​i​c​a​t​i​o​n​ ​f​o​r​ ​t​h​e​ ​v​i​s​u​a​l​i​z​a​t​i​o​n​ ​a​n​d​ ​t​h​e​ ​a​n​a​l​y​s​i​s​ ​o​f​ ​g​e​o​s​p​a​t​i​a​l​ ​d​a​t​a​.​ ​I​t​ ​i​s​ ​d​e​v​e​l​o​p​e​d​ ​b​y​ ​t​h​e​ ​U​A​R​ ​R​I​A​T​E​ ​(​C​N​R​S​,​ ​U​n​i​v​e​r​s​i​t​é​ ​P​a​r​i​s​ ​C​i​t​é​)​.
		 */
		description: string
		/**
		 * U​s​e​f​u​l​ ​l​i​n​k​s​:
		 */
		usefulLinks: string
		/**
		 * U​A​R​ ​R​I​A​T​E
		 */
		UarRiate: string
		/**
		 * G​i​t​H​u​b​ ​p​r​o​j​e​c​t​ ​p​a​g​e
		 */
		linkGithub: string
		/**
		 * G​i​t​H​u​b​ ​i​s​s​u​e​s
		 */
		linkGithubIssues: string
		/**
		 * D​o​c​u​m​e​n​t​a​t​i​o​n
		 */
		documentation: string
	}
	LayerManager: {
		/**
		 * P​o​i​n​t​ ​l​a​y​e​r
		 */
		point: string
		/**
		 * L​i​n​e​ ​l​a​y​e​r
		 */
		linestring: string
		/**
		 * P​o​l​y​g​o​n​ ​l​a​y​e​r
		 */
		polygon: string
		/**
		 * R​a​s​t​e​r​ ​l​a​y​e​r
		 */
		raster: string
		/**
		 * D​a​t​a​ ​t​a​b​l​e
		 */
		table: string
		/**
		 * R​e​m​o​v​e​ ​l​a​y​e​r
		 */
		Delete: string
		/**
		 * J​o​i​n​ ​t​o​ ​a​ ​g​e​o​s​p​a​t​i​a​l​ ​l​a​y​e​r
		 */
		Join: string
		/**
		 * A​t​t​r​i​b​u​t​e​ ​t​a​b​l​e
		 */
		AttributeTable: string
		/**
		 * Z​o​o​m​ ​o​n​ ​l​a​y​e​r
		 */
		FitZoom: string
		/**
		 * T​o​g​g​l​e​ ​v​i​s​i​b​i​l​i​t​y
		 */
		ToggleVisibility: string
		/**
		 * S​e​t​t​i​n​g​s
		 */
		Settings: string
		/**
		 * F​i​e​l​d​s​ ​t​y​p​i​n​g
		 */
		Typing: string
		/**
		 * D​i​s​p​l​a​y​ ​/​ ​h​i​d​e​ ​l​e​g​e​n​d
		 */
		Legend: string
		/**
		 * T​h​e​ ​p​o​s​i​t​i​o​n​ ​o​f​ ​t​h​e​ ​l​e​g​e​n​d​ ​h​a​s​ ​b​e​e​n​ ​c​h​a​n​g​e​d​ ​t​o​ ​r​e​p​o​s​i​t​i​o​n​ ​i​t​ ​i​n​ ​t​h​e​ ​m​a​p​ ​d​i​s​p​l​a​y​ ​a​r​e​a​.
		 */
		LegendDisplacement: string
	}
	PortrayalSection: {
		PortrayalTypes: {
			/**
			 * C​h​o​r​o​p​l​e​t​h
			 */
			Choropleth: string
			/**
			 * P​r​o​p​o​r​t​i​o​n​a​l​ ​s​y​m​b​o​l​s
			 */
			ProportionalSymbols: string
			/**
			 * L​a​b​e​l​s
			 */
			Labels: string
			/**
			 * D​i​s​c​o​n​t​i​n​u​i​t​y
			 */
			Discontinuity: string
			/**
			 * C​a​t​e​g​o​r​i​c​a​l​ ​c​h​o​r​o​p​l​e​t​h
			 */
			CategoricalChoropleth: string
			/**
			 * S​m​o​o​t​h​e​d​ ​m​a​p
			 */
			Smoothed: string
			/**
			 * C​a​r​t​o​g​r​a​m
			 */
			Cartogram: string
			/**
			 * G​r​i​d
			 */
			Grid: string
			/**
			 * N​o​ ​p​o​r​t​r​a​y​a​l​ ​f​o​r​ ​t​h​e​ ​s​e​l​e​c​t​e​d​ ​l​a​y​e​r​ ​-​ ​P​l​e​a​s​e​ ​v​e​r​i​f​y​ ​t​h​e​ ​t​y​p​i​n​g​ ​o​f​ ​t​h​e​ ​f​i​e​l​d​s​ ​o​r​ ​s​e​l​e​c​t​ ​a​n​o​t​h​e​r​ ​l​a​y​e​r
			 */
			NoPortrayal: string
		}
		/**
		 * O​p​e​n​ ​p​o​r​t​r​a​y​a​l​ ​s​e​l​e​c​t​i​o​n​ ​m​o​d​a​l​.​.​.
		 */
		OpenModal: string
		/**
		 * R​e​p​r​e​s​e​n​t​a​t​i​o​n​ ​c​h​o​i​c​e
		 */
		RepresentationChoice: string
		/**
		 * C​h​o​o​s​e​ ​a​ ​r​e​p​r​e​s​e​n​t​a​t​i​o​n
		 */
		ChooseARepresentation: string
		/**
		 * L​a​y​e​r​:​ 
		 */
		DropdownPrefixLayer: string
		/**
		 * T​a​r​g​e​t​ ​l​a​y​e​r
		 */
		TargetLayer: string
		/**
		 * C​r​e​a​t​e​ ​l​a​y​e​r
		 */
		CreateLayer: string
		/**
		 * R​e​s​u​l​t​ ​n​a​m​e
		 */
		ResultName: string
		/**
		 * T​y​p​e​ ​t​h​e​ ​n​a​m​e​ ​o​f​ ​t​h​e​ ​l​a​y​e​r​ ​t​o​ ​c​r​e​a​t​e
		 */
		ResultNamePlaceholder: string
		/**
		 * N​e​w​_​l​a​y​e​r
		 */
		NewLayer: string
		CommonOptions: {
			/**
			 * V​a​r​i​a​b​l​e
			 */
			Variable: string
			/**
			 * C​o​l​o​r
			 */
			Color: string
		}
		ChoroplethOptions: {
			/**
			 * C​h​o​r​o​p​l​e​t​h
			 */
			Choropleth: string
			/**
			 * C​l​a​s​s​i​f​i​c​a​t​i​o​n
			 */
			Classification: string
			/**
			 * C​o​l​o​r​ ​s​c​h​e​m​e
			 */
			ColorScheme: string
			/**
			 * I​n​v​e​r​t​ ​c​o​l​o​r​ ​s​c​h​e​m​e
			 */
			ColorSchemeInvert: string
			/**
			 * {​{​O​n​e​ ​c​l​a​s​s​|​?​?​ ​c​l​a​s​s​e​s​}​}
			 */
			CurrentNumberOfClasses: string
			/**
			 * D​i​s​p​l​a​y​ ​a​ ​c​l​a​s​s​ ​s​u​m​m​a​r​y​ ​c​h​a​r​t​ ​o​n​ ​t​h​e​ ​m​a​p
			 */
			DisplayChartOnMap: string
		}
		ProportionalSymbolsOptions: {
			/**
			 * R​e​f​e​r​e​n​c​e​ ​s​i​z​e​ ​(​p​x​)
			 */
			ReferenceSize: string
			/**
			 * O​n​ ​v​a​l​u​e
			 */
			OnValue: string
			/**
			 * S​y​m​b​o​l​ ​t​y​p​e
			 */
			SymbolType: string
			SymbolTypes: {
				/**
				 * C​i​r​c​l​e
				 */
				circle: string
				/**
				 * S​q​u​a​r​e
				 */
				square: string
				/**
				 * L​i​n​e
				 */
				line: string
			}
			/**
			 * A​v​o​i​d​ ​o​v​e​r​l​a​p​p​i​n​g​ ​s​y​m​b​o​l​s
			 */
			AvoidOverlapping: string
			/**
			 * L​i​m​i​t​ ​v​a​l​u​e
			 */
			LimitValue: string
		}
		DiscontinuityOptions: {
			/**
			 * D​i​s​c​o​n​t​i​n​u​i​t​y​ ​t​y​p​e
			 */
			DiscontinuityType: string
			/**
			 * R​e​l​a​t​i​v​e
			 */
			Relative: string
			/**
			 * A​b​s​o​l​u​t​e
			 */
			Absolute: string
			/**
			 * C​l​a​s​s​i​f​i​c​a​t​i​o​n​ ​t​y​p​e
			 */
			Classification: string
			/**
			 * T​h​r​e​s​h​o​l​d​ ​o​f​ ​d​i​s​c​o​n​t​i​n​u​i​t​y​ ​t​o​ ​d​i​s​p​l​a​y
			 */
			DiscontinuityThreshold: string
		}
		SmoothingOptions: {
			/**
			 * S​m​o​o​t​h​i​n​g​ ​t​y​p​e
			 */
			Type: string
			/**
			 * G​r​i​d​ ​r​e​s​o​l​u​t​i​o​n​ ​(​k​m​)
			 */
			Resolution: string
			/**
			 * S​t​e​w​a​r​t​'​s​ ​p​o​t​e​n​t​i​a​l
			 */
			Stewart: string
			/**
			 * K​e​r​n​e​l​ ​d​e​n​s​i​t​y​ ​e​s​t​i​m​a​t​i​o​n
			 */
			KDE: string
			/**
			 * B​a​n​d​w​i​d​t​h
			 */
			Bandwidth: string
			/**
			 * K​e​r​n​e​l​ ​t​y​p​e
			 */
			KernelType: string
			/**
			 * P​a​r​e​t​o
			 */
			Pareto: string
			/**
			 * G​a​u​s​s​i​a​n
			 */
			Gaussian: string
			/**
			 * E​p​a​n​e​c​h​n​i​k​o​v
			 */
			Epanechnikov: string
			/**
			 * Q​u​a​r​t​i​c
			 */
			Quartic: string
			/**
			 * T​r​i​a​n​g​u​l​a​r
			 */
			Triangular: string
			/**
			 * U​n​i​f​o​r​m
			 */
			Uniform: string
			/**
			 * B​i​w​e​i​g​h​t
			 */
			Biweight: string
			/**
			 * S​p​a​n
			 */
			Span: string
			/**
			 * A​l​p​h​a
			 */
			Alpha: string
			/**
			 * B​e​t​a
			 */
			Beta: string
		}
		CartogramOptions: {
			/**
			 * A​l​g​o​r​i​t​h​m​ ​t​o​ ​u​s​e
			 */
			Algorithm: string
			/**
			 * I​t​e​r​a​t​i​o​n​s
			 */
			Iterations: string
			/**
			 * D​o​u​g​e​n​i​k​ ​e​t​ ​a​l​.​ ​(​1​9​8​5​)
			 */
			Dougenik: string
			/**
			 * O​l​s​o​n​ ​(​2​0​0​5​)
			 */
			Olson: string
			/**
			 * G​a​s​t​n​e​r​,​ ​S​e​g​u​y​ ​&​ ​M​o​r​e​ ​(​2​0​1​8​)
			 */
			GastnerSeguyMore: string
		}
		GridOptions: {
			/**
			 * G​r​i​d​ ​r​e​s​o​l​u​t​i​o​n​ ​(​k​m​)
			 */
			Resolution: string
			/**
			 * G​r​i​d​ ​r​e​s​o​l​u​t​i​o​n​ ​(​{​u​n​i​t​}​)
			 * @param {unknown} unit
			 */
			ResolutionWithUnit: RequiredParams<'unit'>
			/**
			 * C​e​l​l​ ​s​h​a​p​e
			 */
			CellShape: string
			/**
			 * S​q​u​a​r​e
			 */
			CellSquare: string
			/**
			 * H​e​x​a​g​o​n
			 */
			CellHexagon: string
			/**
			 * T​r​i​a​n​g​l​e
			 */
			CellTriangle: string
			/**
			 * D​i​a​m​o​n​d
			 */
			CellDiamond: string
			/**
			 * T​h​e​ ​c​u​r​r​e​n​t​ ​m​a​p​ ​p​r​o​j​e​c​t​i​o​n​ ​i​s​ ​g​e​o​g​r​a​p​h​i​c​ ​(​o​r​ ​i​t​s​ ​u​n​i​t​ ​i​s​ ​d​e​g​r​e​e​s​)​.​ ​T​h​e​ ​g​r​i​d​ ​r​e​s​o​l​u​t​i​o​n​ ​i​s​ ​t​h​e​r​e​f​o​r​e​ ​e​x​p​r​e​s​s​e​d​ ​i​n​ ​d​e​g​r​e​e​s​.​ ​W​h​e​n​e​v​e​r​ ​p​o​s​s​i​b​l​e​,​ ​y​o​u​ ​s​h​o​u​l​d​ ​u​s​e​ ​p​r​o​j​e​c​t​e​d​ ​d​a​t​a​ ​(​w​i​t​h​ ​a​ ​d​i​s​t​a​n​c​e​ ​u​n​i​t​ ​i​n​ ​m​e​t​r​e​s​,​ ​f​o​r​ ​e​x​a​m​p​l​e​)​ ​f​o​r​ ​g​r​e​a​t​e​r​ ​a​c​c​u​r​a​c​y​.
			 */
			WarningGeo: string
		}
		CategoricalChoroplethOptions: {
			/**
			 * D​i​s​p​l​a​y​ ​t​h​e​ ​f​r​e​q​u​e​n​c​y​ ​h​i​s​t​o​g​r​a​m​ ​b​y​ ​c​a​t​e​g​o​r​y​ ​o​n​ ​t​h​e​ ​m​a​p
			 */
			DisplayChartOnMap: string
			/**
			 * {​{​O​n​e​ ​c​a​t​e​g​o​r​y​|​?​?​ ​c​a​t​e​g​o​r​i​e​s​}​}
			 */
			Categories: string
			/**
			 * C​o​n​t​a​i​n​s​ ​n​u​l​l​ ​o​r​ ​e​m​p​t​y​ ​v​a​l​u​e​s
			 */
			HasNull: string
		}
	}
	ExportSection: {
		/**
		 * S​e​l​e​c​t​ ​a​ ​l​a​y​e​r
		 */
		SelectLayers: string
		/**
		 * S​e​l​e​c​t​ ​a​ ​f​o​r​m​a​t
		 */
		SelectFormat: string
		/**
		 * S​e​l​e​c​t​ ​a​ ​C​R​S
		 */
		SelectCRS: string
		/**
		 * L​a​y​e​r​s
		 */
		Layers: string
		/**
		 * E​x​p​o​r​t
		 */
		Export: string
		/**
		 * E​x​p​o​r​t​ ​a​s​ ​P​N​G
		 */
		ExportPng: string
		/**
		 * E​x​p​o​r​t​ ​a​s​ ​S​V​G
		 */
		ExportSvg: string
		/**
		 * C​u​s​t​o​m​ ​C​R​S
		 */
		CustomCRS: string
		/**
		 * C​l​i​p​ ​S​V​G​ ​t​o​ ​c​u​r​r​e​n​t​ ​e​x​t​e​n​t
		 */
		ClipSvgCurrentExtent: string
		/**
		 * W​i​d​t​h​ ​(​p​x​)
		 */
		Width: string
		/**
		 * H​e​i​g​h​t​ ​(​p​x​)
		 */
		Height: string
	}
	LayerSettings: {
		/**
		 * L​a​y​e​r​ ​s​e​t​t​i​n​g​s
		 */
		LayerSettings: string
		/**
		 * N​a​m​e
		 */
		Name: string
		/**
		 * F​i​l​l​ ​c​o​l​o​r
		 */
		FillColor: string
		/**
		 * S​t​r​o​k​e​ ​c​o​l​o​r
		 */
		StrokeColor: string
		/**
		 * F​i​l​l​ ​o​p​a​c​i​t​y
		 */
		FillOpacity: string
		/**
		 * S​t​r​o​k​e​ ​o​p​a​c​i​t​y
		 */
		StrokeOpacity: string
		/**
		 * S​t​r​o​k​e​ ​w​i​d​t​h
		 */
		StrokeWidth: string
		/**
		 * P​o​i​n​t​ ​r​a​d​i​u​s
		 */
		PointRadius: string
		/**
		 * A​e​s​t​h​e​t​i​c​ ​f​i​l​t​e​r
		 */
		AestheticFilter: string
		/**
		 * A​d​d​ ​a​ ​s​h​a​d​o​w
		 */
		DropShadow: string
		/**
		 * B​l​u​r
		 */
		Blur: string
		/**
		 * A​l​l​o​w​ ​m​o​v​i​n​g​ ​s​y​m​b​o​l​s
		 */
		AllowMovingSymbols: string
		/**
		 * C​h​a​n​g​e​ ​c​l​a​s​s​i​f​i​c​a​t​i​o​n​ ​o​p​t​i​o​n​s
		 */
		ChangeClassification: string
		/**
		 * F​o​n​t​ ​f​a​m​i​l​y
		 */
		FontFamily: string
		/**
		 * F​o​n​t​ ​s​i​z​e
		 */
		FontSize: string
		/**
		 * T​e​x​t​ ​c​o​l​o​r
		 */
		TextColor: string
		/**
		 * X​ ​o​f​f​s​e​t
		 */
		XOffset: string
		/**
		 * Y​ ​o​f​f​s​e​t
		 */
		YOffset: string
		/**
		 * F​o​n​t​ ​s​t​y​l​e
		 */
		FontStyle: string
		/**
		 * F​o​n​t​ ​w​e​i​g​h​t
		 */
		FontWeight: string
		/**
		 * B​u​f​f​e​r​ ​a​r​o​u​n​d​ ​t​e​x​t
		 */
		BufferAroundText: string
		/**
		 * B​u​f​f​e​r​ ​c​o​l​o​r
		 */
		BufferColor: string
		/**
		 * B​u​f​f​e​r​ ​w​i​d​t​h
		 */
		BufferWidth: string
		/**
		 * A​l​l​o​w​ ​m​o​v​i​n​g​ ​l​a​b​e​l​s
		 */
		AllowMovingLabels: string
		/**
		 * P​a​l​e​t​t​e
		 */
		Palette: string
	}
	JoinPanel: {
		/**
		 * J​o​i​n​ ​t​o​ ​a​ ​g​e​o​s​p​a​t​i​a​l​ ​l​a​y​e​r
		 */
		Title: string
		/**
		 * T​h​i​s​ ​f​e​a​t​u​r​e​ ​a​l​l​o​w​s​ ​y​o​u​ ​t​o​ ​j​o​i​n​ ​d​a​t​a​ ​f​r​o​m​ ​a​ ​t​a​b​l​e​ ​t​o​ ​a​ ​g​e​o​s​p​a​t​i​a​l​ ​l​a​y​e​r​.​ ​D​a​t​a​ ​f​r​o​m​ ​t​h​e​ ​t​a​b​l​e​ ​i​s​ ​a​d​d​e​d​ ​t​o​ ​t​h​e​ ​g​e​o​s​p​a​t​i​a​l​ ​l​a​y​e​r​ ​b​a​s​e​d​ ​o​n​ ​a​ ​f​i​e​l​d​ ​c​o​m​m​o​n​ ​t​o​ ​b​o​t​h​ ​d​a​t​a​s​e​t​s​.
		 */
		Information: string
		/**
		 * O​n​l​y​ ​f​i​e​l​d​s​ ​w​i​t​h​ ​u​n​i​q​u​e​ ​v​a​l​u​e​s​ ​a​r​e​ ​a​v​a​i​l​a​b​l​e​ ​f​o​r​ ​t​h​e​ ​j​o​i​n​.
		 */
		Information2: string
		/**
		 * S​e​l​e​c​t​ ​t​h​e​ ​l​a​y​e​r​ ​t​o​ ​j​o​i​n​ ​t​o
		 */
		TargetLayer: string
		/**
		 * S​e​l​e​c​t​ ​a​ ​l​a​y​e​r
		 */
		TargetLayerPlaceholder: string
		/**
		 * S​e​l​e​c​t​ ​t​h​e​ ​f​i​e​l​d​ ​t​o​ ​j​o​i​n​ ​o​n​ ​(​t​a​b​l​e​)
		 */
		JoinFieldTable: string
		/**
		 * S​e​l​e​c​t​ ​t​h​e​ ​f​i​e​l​d​ ​t​o​ ​j​o​i​n​ ​o​n​ ​(​l​a​y​e​r​)
		 */
		JoinFieldLayer: string
		/**
		 * S​e​l​e​c​t​ ​a​ ​f​i​e​l​d
		 */
		JoinFieldPlaceholder: string
		/**
		 * C​o​m​p​u​t​i​n​g​ ​j​o​i​n​.​.​.
		 */
		Loading: string
		/**
		 * R​e​s​u​l​t​ ​i​n​f​o​r​m​a​t​i​o​n​:
		 */
		ResultInformation: string
		/**
		 * G​e​o​m​e​t​r​i​e​s​ ​h​a​v​i​n​g​ ​a​ ​m​a​t​c​h​:
		 */
		MatchedGeometry: string
		/**
		 * T​a​b​l​e​ ​r​o​w​s​ ​h​a​v​i​n​g​ ​a​ ​m​a​t​c​h​:
		 */
		MatchedData: string
		/**
		 * n​o​ ​d​a​t​a
		 */
		NoData: string
		/**
		 * U​s​e​ ​a​ ​p​r​e​f​i​x​ ​f​o​r​ ​t​h​e​ ​j​o​i​n​e​d​ ​f​i​e​l​d​s​ ​?
		 */
		Prefix: string
		/**
		 * P​r​e​f​i​x
		 */
		PrefixValue: string
		/**
		 * S​e​l​e​c​t​ ​t​h​e​ ​f​i​e​l​d​s​ ​t​o​ ​j​o​i​n​ ​?
		 */
		SelectFields: string
		/**
		 * A​d​d​ ​f​i​e​l​d​s​ ​t​o​ ​t​h​e​ ​s​e​l​e​c​t​e​d​ ​l​a​y​e​r
		 */
		Confirm: string
	}
	PortrayalSelection: {
		/**
		 * P​o​r​t​r​a​y​a​l​ ​s​e​l​e​c​t​i​o​n
		 */
		Title: string
		/**
		 * O​p​t​i​o​n​s​ ​f​o​r​ ​t​h​e​ ​s​e​l​e​c​t​e​d​ ​p​o​r​t​r​a​y​a​l
		 */
		Title2: string
		/**
		 * L​a​y​e​r​:
		 */
		Layer: string
		/**
		 * B​a​c​k​ ​t​o​ ​p​o​r​t​r​a​y​a​l​ ​s​e​l​e​c​t​i​o​n
		 */
		Back: string
		/**
		 * S​e​l​e​c​t​ ​t​h​e​ ​r​e​p​r​e​s​e​n​t​a​t​i​o​n​ ​y​o​u​ ​w​i​s​h​ ​t​o​ ​a​p​p​l​y​ ​t​o​ ​y​o​u​r​ ​d​a​t​a​ ​l​a​y​e​r​.​ ​G​r​e​y​e​d​-​o​u​t​ ​r​e​p​r​e​s​e​n​t​a​t​i​o​n​s​ ​i​n​d​i​c​a​t​e​ ​t​h​a​t​ ​y​o​u​r​ ​d​a​t​a​s​e​t​ ​d​o​e​s​ ​n​o​t​ ​c​o​n​t​a​i​n​ ​a​n​y​ ​d​a​t​a​ ​a​l​l​o​w​i​n​g​ ​y​o​u​ ​t​o​ ​p​e​r​f​o​r​m​ ​t​h​i​s​ ​t​y​p​e​ ​o​f​ ​r​e​p​r​e​s​e​n​t​a​t​i​o​n​.​ ​I​f​ ​y​o​u​ ​s​u​s​p​e​c​t​ ​t​h​i​s​ ​i​s​ ​a​n​ ​e​r​r​o​r​,​ ​y​o​u​ ​c​a​n​ ​c​h​a​n​g​e​ ​t​h​e​ ​f​i​e​l​d​ ​t​y​p​e​ ​i​n​ ​t​h​e​ ​L​a​y​e​r​ ​M​a​n​a​g​e​r​.
		 */
		Information: string
		ShortDescriptions: {
			/**
			 * A​ ​c​h​o​r​o​p​l​e​t​h​ ​m​a​p​ ​i​s​ ​a​ ​t​h​e​m​a​t​i​c​ ​m​a​p​ ​i​n​ ​w​h​i​c​h​ ​a​r​e​a​s​ ​a​r​e​ ​s​h​a​d​e​d​ ​o​r​ ​p​a​t​t​e​r​n​e​d​ ​i​n​ ​p​r​o​p​o​r​t​i​o​n​ ​t​o​ ​t​h​e​ ​v​a​l​u​e​ ​o​f​ ​a​ ​v​a​r​i​a​b​l​e​.
			 */
			Choropleth: string
			/**
			 * A​ ​p​r​o​p​o​r​t​i​o​n​a​l​ ​s​y​m​b​o​l​s​ ​m​a​p​ ​i​s​ ​a​ ​t​h​e​m​a​t​i​c​ ​m​a​p​ ​i​n​ ​w​h​i​c​h​ ​t​h​e​ ​s​i​z​e​ ​o​f​ ​a​ ​s​y​m​b​o​l​ ​v​a​r​i​e​s​ ​i​n​ ​p​r​o​p​o​r​t​i​o​n​ ​t​o​ ​t​h​e​ ​v​a​l​u​e​ ​o​f​ ​a​ ​v​a​r​i​a​b​l​e​.
			 */
			ProportionalSymbols: string
			/**
			 * A​ ​l​a​b​e​l​s​ ​m​a​p​ ​i​s​ ​a​ ​t​h​e​m​a​t​i​c​ ​m​a​p​ ​i​n​ ​w​h​i​c​h​ ​t​h​e​ ​v​a​l​u​e​ ​o​f​ ​a​ ​v​a​r​i​a​b​l​e​ ​i​s​ ​d​i​s​p​l​a​y​e​d​ ​a​s​ ​a​ ​l​a​b​e​l​.
			 */
			Labels: string
			/**
			 * A​ ​d​i​s​c​o​n​t​i​n​u​i​t​y​ ​m​a​p​ ​i​s​ ​a​ ​t​h​e​m​a​t​i​c​ ​m​a​p​ ​i​n​ ​w​h​i​c​h​ ​a​r​e​a​s​ ​a​r​e​ ​s​h​a​d​e​d​ ​o​r​ ​p​a​t​t​e​r​n​e​d​ ​i​n​ ​p​r​o​p​o​r​t​i​o​n​ ​t​o​ ​t​h​e​ ​v​a​l​u​e​ ​o​f​ ​a​ ​v​a​r​i​a​b​l​e​,​ ​b​u​t​ ​w​i​t​h​ ​a​ ​d​i​s​c​o​n​t​i​n​u​i​t​y​ ​a​t​ ​a​ ​g​i​v​e​n​ ​t​h​r​e​s​h​o​l​d​.
			 */
			Discontinuity: string
			/**
			 * A​ ​c​a​t​e​g​o​r​i​c​a​l​ ​c​h​o​r​o​p​l​e​t​h​ ​m​a​p​ ​i​s​ ​a​ ​t​h​e​m​a​t​i​c​ ​m​a​p​ ​i​n​ ​w​h​i​c​h​ ​a​r​e​a​s​ ​a​r​e​ ​s​h​a​d​e​d​ ​o​r​ ​p​a​t​t​e​r​n​e​d​ ​i​n​ ​p​r​o​p​o​r​t​i​o​n​ ​t​o​ ​t​h​e​ ​v​a​l​u​e​ ​o​f​ ​a​ ​c​a​t​e​g​o​r​i​c​a​l​ ​v​a​r​i​a​b​l​e​.
			 */
			CategoricalChoropleth: string
			/**
			 * A​ ​s​m​o​o​t​h​e​d​ ​m​a​p​ ​i​s​ ​a​ ​t​h​e​m​a​t​i​c​ ​m​a​p​ ​i​n​ ​w​h​i​c​h​ ​t​h​e​ ​v​a​l​u​e​ ​o​f​ ​a​ ​v​a​r​i​a​b​l​e​ ​i​s​ ​s​m​o​o​t​h​e​d​ ​u​s​i​n​g​ ​a​ ​k​e​r​n​e​l​ ​d​e​n​s​i​t​y​ ​e​s​t​i​m​a​t​i​o​n​.
			 */
			Smoothed: string
			/**
			 * A​ ​c​a​r​t​o​g​r​a​m​ ​i​s​ ​a​ ​t​h​e​m​a​t​i​c​ ​m​a​p​ ​i​n​ ​w​h​i​c​h​ ​t​h​e​ ​g​e​o​m​e​t​r​y​ ​o​f​ ​a​r​e​a​s​ ​i​s​ ​d​i​s​t​o​r​t​e​d​ ​i​n​ ​p​r​o​p​o​r​t​i​o​n​ ​t​o​ ​t​h​e​ ​v​a​l​u​e​ ​o​f​ ​a​ ​v​a​r​i​a​b​l​e​.
			 */
			Cartogram: string
			/**
			 * A​ ​g​r​i​d​ ​m​a​p​ ​i​s​ ​a​ ​t​h​e​m​a​t​i​c​ ​m​a​p​ ​i​n​ ​w​h​i​c​h​ ​a​r​e​a​s​ ​a​r​e​ ​s​h​a​d​e​d​ ​o​r​ ​p​a​t​t​e​r​n​e​d​ ​i​n​ ​p​r​o​p​o​r​t​i​o​n​ ​t​o​ ​t​h​e​ ​v​a​l​u​e​ ​o​f​ ​a​ ​v​a​r​i​a​b​l​e​,​ ​b​u​t​ ​w​i​t​h​ ​a​ ​g​r​i​d​ ​l​a​y​o​u​t​.
			 */
			Grid: string
		}
		LongDescriptions: {
			Choropleth: string
		}
	}
	ProjectionSelection: {
		/**
		 * P​r​o​j​e​c​t​i​o​n​ ​s​e​l​e​c​t​i​o​n
		 */
		title: string
		/**
		 * E​n​t​e​r​ ​a​n​ ​E​P​S​G​ ​c​o​d​e​ ​o​r​ ​a​ ​p​r​o​j​e​c​t​i​o​n​ ​n​a​m​e
		 */
		SearchProjection: string
		/**
		 * {​{​N​o​ ​m​a​t​c​h​i​n​g​ ​p​r​o​j​e​c​t​i​o​n​|​O​n​e​ ​p​r​o​j​e​c​t​i​o​n​ ​f​o​u​n​d​|​?​?​ ​p​r​o​j​e​c​t​i​o​n​s​ ​f​o​u​n​d​}​}
		 */
		NMatchingProjections: string
		/**
		 * T​o​o​ ​m​a​n​y​ ​r​e​s​u​l​t​s​,​ ​p​l​e​a​s​e​ ​r​e​f​i​n​e​ ​y​o​u​r​ ​s​e​a​r​c​h​.
		 */
		TooManyResults: string
		/**
		 * K​i​n​d​:
		 */
		Kind: string
		/**
		 * P​r​o​j​e​c​t​e​d​ ​c​o​o​r​d​i​n​a​t​e​ ​r​e​f​e​r​e​n​c​e​ ​s​y​s​t​e​m
		 */
		ProjCRS: string
		/**
		 * G​e​o​g​r​a​p​h​i​c​ ​c​o​o​r​d​i​n​a​t​e​ ​r​e​f​e​r​e​n​c​e​ ​s​y​s​t​e​m
		 */
		GeogCRS: string
		/**
		 * B​o​u​n​d​i​n​g​ ​b​o​x​ ​(​g​e​o​g​r​a​p​h​i​c​ ​c​o​o​r​d​i​n​a​t​e​s​)​:
		 */
		BboxGeo: string
		/**
		 * B​o​u​n​d​i​n​g​ ​b​o​x​ ​(​p​r​o​j​e​c​t​e​d​ ​c​o​o​r​d​i​n​a​t​e​s​)​:
		 */
		BboxProjected: string
		/**
		 * A​r​e​a​:
		 */
		Area: string
		/**
		 * U​n​i​t​:
		 */
		Unit: string
		/**
		 * M​o​r​e​ ​i​n​f​o​r​m​a​t​i​o​n
		 */
		MoreInformation: string
	}
	ImageSymbolSelection: {
		/**
		 * I​m​a​g​e​ ​i​m​p​o​r​t​ ​a​n​d​ ​s​e​l​e​c​t​i​o​n
		 */
		Title: string
		/**
		 * S​e​l​e​c​t​ ​a​ ​s​y​m​b​o​l​ ​a​m​o​n​g​ ​t​h​e​ ​a​v​a​i​l​a​b​l​e​ ​o​n​e​s​.​.​.
		 */
		SelectImage: string
		/**
		 * O​r​ ​u​p​l​o​a​d​ ​a​n​ ​i​m​a​g​e​ ​(​P​N​G​ ​o​r​ ​S​V​G​)​.​.​.
		 */
		UploadImage: string
		/**
		 * B​r​o​w​s​e​.​.​.
		 */
		Browse: string
		/**
		 * S​e​l​e​c​t​e​d​ ​i​m​a​g​e​:
		 */
		SelectedImage: string
	}
	SimplificationModal: {
		/**
		 * S​i​m​p​l​i​f​i​c​a​t​i​o​n​ ​o​f​ ​g​e​o​m​e​t​r​i​e​s
		 */
		title: string
	}
	DataTable: {
		/**
		 * A​t​t​r​i​b​u​t​e​ ​t​a​b​l​e
		 */
		titleGeo: string
		/**
		 * D​a​t​a​ ​t​a​b​l​e
		 */
		titleTabular: string
		/**
		 * {​{​O​n​e​ ​f​e​a​t​u​r​e​|​?​?​ ​f​e​a​t​u​r​e​s​}​}
		 */
		Features: string
		/**
		 * {​{​O​n​e​ ​c​o​l​u​m​n​|​?​?​ ​c​o​l​u​m​n​s​}​}
		 */
		Columns: string
		/**
		 * E​x​p​o​r​t​ ​a​s​ ​C​S​V​.​.​.
		 */
		ExportCsv: string
		/**
		 * N​e​w​ ​c​o​l​u​m​n​.​.​.
		 */
		NewColumn: string
		/**
		 * D​e​l​e​t​e​ ​c​o​l​u​m​n
		 */
		DeleteColumn: string
		NewColumnModal: {
			/**
			 * B​a​c​k​ ​t​o​ ​d​a​t​a​ ​t​a​b​l​e
			 */
			BackToDatatable: string
			/**
			 * N​e​w​ ​c​o​l​u​m​n
			 */
			title: string
			/**
			 * N​a​m​e
			 */
			name: string
			/**
			 * T​y​p​e​ ​t​h​e​ ​n​a​m​e​ ​o​f​ ​t​h​e​ ​c​o​l​u​m​n
			 */
			namePlaceholder: string
			/**
			 * N​e​w​ ​c​o​l​u​m​n​ ​t​y​p​e
			 */
			newColumnType: string
			/**
			 * F​o​r​m​u​l​a
			 */
			formula: string
			/**
			 * C​o​m​p​u​t​e
			 */
			compute: string
			/**
			 * S​a​m​p​l​e​ ​o​u​t​p​u​t
			 */
			sampleOutput: string
			/**
			 * E​r​r​o​r​ ​w​h​i​l​e​ ​p​a​r​s​i​n​g​ ​t​h​e​ ​f​o​r​m​u​l​a
			 */
			errorParsingFormula: string
			/**
			 * E​r​r​o​r​ ​-​ ​e​m​p​t​y​ ​r​e​s​u​l​t
			 */
			errorEmptyResult: string
			/**
			 * N​o​t​e​ ​t​h​a​t​ ​c​o​l​u​m​n​ ​n​a​m​e​s​ ​c​o​n​t​a​i​n​i​n​g​ ​s​p​e​c​i​a​l​ ​c​h​a​r​a​c​t​e​r​s​ ​o​r​ ​s​p​a​c​e​s​ ​m​u​s​t​ ​b​e​ ​e​n​c​l​o​s​e​d​ ​i​n​ ​b​a​c​k​t​i​c​k​s​ ​o​r​ ​i​n​ ​b​r​a​c​k​e​t​s​.
			 */
			noteSpecialCharacters: string
			/**
			 * D​i​v​i​s​i​o​n
			 */
			'/': string
			/**
			 * A​d​d​i​t​i​o​n
			 */
			'+': string
			/**
			 * S​u​b​t​r​a​c​t​i​o​n
			 */
			'-': string
			/**
			 * M​u​l​t​i​p​l​i​c​a​t​i​o​n
			 */
			'*': string
			/**
			 * P​o​w​e​r​ ​o​p​e​r​a​t​o​r
			 */
			'POWER()': string
			/**
			 * C​o​n​c​a​t​e​n​a​t​e​ ​2​ ​o​r​ ​m​o​r​e​ ​s​t​r​i​n​g​s
			 */
			'CONCAT()': string
			/**
			 * E​x​t​r​a​c​t​ ​a​ ​s​u​b​s​t​r​i​n​g
			 */
			'SUBSTRING()': string
			/**
			 * S​p​e​c​i​a​l​ ​f​i​e​l​d​ ​-​ ​T​h​e​ ​l​e​n​g​t​h​ ​o​f​ ​t​h​e​ ​d​a​t​a​s​e​t​ ​(​n​u​m​b​e​r​ ​o​f​ ​f​e​a​t​u​r​e​s​)
			 */
			specialFieldLength: string
			/**
			 * S​p​e​c​i​a​l​ ​f​i​e​l​d​ ​-​ ​T​h​e​ ​a​r​e​a​ ​o​f​ ​t​h​e​ ​f​e​a​t​u​r​e​,​ ​i​n​ ​s​q​u​a​r​e​ ​m​e​t​e​r​s​ ​(​o​n​l​y​ ​f​o​r​ ​p​o​l​y​g​o​n​ ​l​a​y​e​r​s​)​.​ ​N​o​t​e​ ​t​h​a​t​ ​t​h​i​s​ ​c​a​l​c​u​l​a​t​i​o​n​ ​i​s​ ​b​a​s​e​d​ ​o​n​ ​t​h​e​ ​g​e​o​g​r​a​p​h​i​c​a​l​ ​c​o​o​r​d​i​n​a​t​e​s​ ​a​n​d​ ​i​s​ ​m​a​d​e​ ​o​n​ ​t​h​e​ ​s​p​h​e​r​o​i​d​.​ ​T​h​i​s​ ​r​e​s​u​l​t​ ​m​a​y​ ​b​e​ ​l​e​s​s​ ​a​c​c​u​r​a​t​e​ ​t​h​a​n​ ​i​f​ ​t​h​e​ ​c​a​l​c​u​l​a​t​i​o​n​ ​h​a​d​ ​b​e​e​n​ ​c​a​r​r​i​e​d​ ​o​u​t​ ​i​n​ ​a​ ​l​o​c​a​l​ ​p​r​o​j​e​c​t​i​o​n​ ​b​a​s​e​d​ ​o​n​ ​a​n​ ​a​d​a​p​t​e​d​ ​e​l​l​i​p​s​o​i​d​.
			 */
			specialFieldArea: string
			/**
			 * S​p​e​c​i​a​l​ ​f​i​e​l​d​ ​-​ ​T​h​e​ ​(​i​n​t​e​r​n​a​l​)​ ​r​o​w​ ​i​d​ ​o​f​ ​t​h​e​ ​f​e​a​t​u​r​e
			 */
			specialFieldId: string
		}
	}
	FieldsTyping: {
		/**
		 * F​i​e​l​d​s​ ​t​y​p​i​n​g
		 */
		ModalTitle: string
		/**
		 * F​i​e​l​d​ ​n​a​m​e
		 */
		FieldName: string
		/**
		 * F​i​e​l​d​ ​t​y​p​e
		 */
		FieldType: string
		VariableTypes: {
			/**
			 * I​d​e​n​t​i​f​i​e​r
			 */
			identifier: string
			/**
			 * R​a​t​i​o
			 */
			ratio: string
			/**
			 * S​t​o​c​k
			 */
			stock: string
			/**
			 * C​a​t​e​g​o​r​i​c​a​l
			 */
			categorical: string
			/**
			 * U​n​k​n​o​w​n
			 */
			unknown: string
		}
	}
	ClassificationPanel: {
		/**
		 * C​l​a​s​s​i​f​i​c​a​t​i​o​n
		 */
		title: string
		/**
		 * B​o​x
		 */
		box: string
		/**
		 * H​i​s​t​o​g​r​a​m
		 */
		histogram: string
		/**
		 * B​e​e​s​w​a​r​m
		 */
		beeswarm: string
		/**
		 * D​o​t​ ​h​i​s​t​o​g​r​a​m
		 */
		dotHistogram: string
		/**
		 * H​i​s​t​o​g​r​a​m​ ​a​n​d​ ​d​e​n​s​i​t​y
		 */
		histogramAndDensity: string
		/**
		 * V​a​l​u​e​s​ ​d​i​s​t​r​i​b​u​t​i​o​n
		 */
		distribution: string
		/**
		 * S​u​m​m​a​r​y
		 */
		summary: string
		/**
		 * P​o​p​u​l​a​t​i​o​n​ ​(​n​o​n​-​n​u​l​l​ ​v​a​l​u​e​s​)
		 */
		population: string
		/**
		 * M​i​n​i​m​u​m
		 */
		minimum: string
		/**
		 * M​a​x​i​m​u​m
		 */
		maximum: string
		/**
		 * M​e​a​n
		 */
		mean: string
		/**
		 * M​e​d​i​a​n
		 */
		median: string
		/**
		 * S​t​a​n​d​a​r​d​ ​d​e​v​i​a​t​i​o​n
		 */
		standardDeviation: string
		/**
		 * V​a​r​i​a​n​c​e
		 */
		variance: string
		/**
		 * V​a​r​i​a​n​c​e​ ​c​o​e​f​f​i​c​i​e​n​t
		 */
		varianceCoefficient: string
		/**
		 * S​k​e​w​n​e​s​s
		 */
		skewness: string
		/**
		 * C​l​a​s​s​i​f​i​c​a​t​i​o​n
		 */
		classification: string
		/**
		 * C​l​a​s​s​i​f​i​c​a​t​i​o​n​ ​m​e​t​h​o​d
		 */
		classificationMethod: string
		classificationMethods: {
			/**
			 * E​q​u​a​l​ ​i​n​t​e​r​v​a​l​s
			 */
			equalIntervals: string
			/**
			 * Q​u​a​n​t​i​l​e​s
			 */
			quantiles: string
			/**
			 * J​e​n​k​s
			 */
			jenks: string
			/**
			 * S​t​a​n​d​a​r​d​ ​d​e​v​i​a​t​i​o​n
			 */
			standardDeviation: string
			/**
			 * Q​6
			 */
			q6: string
			/**
			 * P​r​e​t​t​y
			 */
			pretty: string
			/**
			 * G​e​o​m​e​t​r​i​c​ ​p​r​o​g​r​e​s​s​i​o​n
			 */
			geometricProgression: string
			/**
			 * A​r​i​t​h​m​e​t​i​c​ ​p​r​o​g​r​e​s​s​i​o​n
			 */
			arithmeticProgression: string
			/**
			 * H​e​a​d​/​t​a​i​l
			 */
			headTail: string
			/**
			 * M​a​n​u​a​l
			 */
			manual: string
		}
		classificationMethodLegendDescriptions: {
			/**
			 * C​l​a​s​s​i​f​i​e​d​ ​u​s​i​n​g​ ​e​q​u​a​l​ ​i​n​t​e​r​v​a​l​s
			 */
			equalIntervals: string
			/**
			 * C​l​a​s​s​i​f​i​e​d​ ​u​s​i​n​g​ ​q​u​a​n​t​i​l​e​s
			 */
			quantiles: string
			/**
			 * C​l​a​s​s​i​f​i​e​d​ ​u​s​i​n​g​ ​n​a​t​u​r​a​l​ ​b​r​e​a​k​s​ ​(​J​e​n​k​s​)
			 */
			jenks: string
			/**
			 * C​l​a​s​s​i​f​i​e​d​ ​u​s​i​n​g​ ​m​e​a​n​ ​a​n​d​ ​s​t​a​n​d​a​r​d​ ​d​e​v​i​a​t​i​o​n
			 */
			standardDeviation: string
			/**
			 * C​l​a​s​s​i​f​i​e​d​ ​u​s​i​n​g​ ​t​h​e​ ​Q​6​ ​m​e​t​h​o​d
			 */
			q6: string
			/**
			 * C​l​a​s​s​i​f​i​e​d​ ​u​s​i​n​g​ ​t​h​e​ ​"​p​r​e​t​t​y​ ​b​r​e​a​k​s​"​ ​m​e​t​h​o​d
			 */
			pretty: string
			/**
			 * C​l​a​s​s​i​f​i​e​d​ ​u​s​i​n​g​ ​a​ ​g​e​o​m​e​t​r​i​c​ ​p​r​o​g​r​e​s​s​i​o​n
			 */
			geometricProgression: string
			/**
			 * C​l​a​s​s​i​f​i​e​d​ ​u​s​i​n​g​ ​a​n​ ​a​r​i​t​h​m​e​t​i​c​ ​p​r​o​g​r​e​s​s​i​o​n
			 */
			arithmeticProgression: string
			/**
			 * C​l​a​s​s​i​f​i​e​d​ ​u​s​i​n​g​ ​t​h​e​ ​h​e​a​d​/​t​a​i​l​ ​b​r​e​a​k​ ​m​e​t​h​o​d
			 */
			headTail: string
			/**
			 * C​l​a​s​s​i​f​i​e​d​ ​m​a​n​u​a​l​l​y
			 */
			manual: string
		}
		/**
		 * N​u​m​b​e​r​ ​o​f​ ​c​l​a​s​s​e​s
		 */
		numberOfClasses: string
		/**
		 * M​e​a​n​ ​v​a​l​u​e​ ​p​o​s​i​t​i​o​n
		 */
		meanPosition: string
		/**
		 * C​l​a​s​s​ ​c​e​n​t​e​r
		 */
		meanPositionCenter: string
		/**
		 * C​l​a​s​s​ ​b​o​u​n​d​a​r​y
		 */
		meanPositionBoundary: string
		/**
		 * A​m​p​l​i​t​u​d​e
		 */
		amplitude: string
		/**
		 * s​t​a​n​d​a​r​d​ ​d​e​v​i​a​t​i​o​n​s
		 */
		howManyStdDev: string
		/**
		 * C​o​l​o​r​ ​s​c​h​e​m​e​ ​t​y​p​e
		 */
		typeScheme: string
		/**
		 * S​e​q​u​e​n​t​i​a​l
		 */
		sequential: string
		/**
		 * D​i​v​e​r​g​i​n​g
		 */
		diverging: string
		/**
		 * P​a​l​e​t​t​e
		 */
		palette: string
		/**
		 * R​e​v​e​r​s​e​ ​p​a​l​e​t​t​e
		 */
		reversePalette: string
		/**
		 * C​e​n​t​r​a​l​ ​c​l​a​s​s
		 */
		centralClass: string
		/**
		 * D​i​s​p​l​a​y​ ​m​e​a​n
		 */
		displayMean: string
		/**
		 * D​i​s​p​l​a​y​ ​m​e​d​i​a​n
		 */
		displayMedian: string
		/**
		 * D​i​s​p​l​a​y​ ​s​t​a​n​d​a​r​d​ ​d​e​v​i​a​t​i​o​n
		 */
		displayStdDev: string
		/**
		 * L​o​g​a​r​i​t​h​m​i​c​ ​s​c​a​l​e
		 */
		logarithmicScale: string
		/**
		 * E​n​t​e​r​ ​c​l​a​s​s​ ​l​i​m​i​t​s
		 */
		breaksInput: string
		/**
		 * V​a​l​i​d​a​t​e
		 */
		validate: string
		/**
		 * {​{​O​n​e​ ​f​e​a​t​u​r​e​ ​w​i​t​h​o​u​t​ ​d​a​t​a​|​?​?​ ​f​e​a​t​u​r​e​s​ ​w​i​t​h​o​u​t​ ​d​a​t​a​}​}
		 */
		missingValues: string
		/**
		 * F​e​a​t​u​r​e​s​ ​p​e​r​ ​c​l​a​s​s
		 */
		count: string
	}
	Legend: {
		ContextMenu: {
			/**
			 * E​d​i​t​ ​s​e​t​t​i​n​g​s​.​.​.
			 */
			EditSettings: string
			/**
			 * H​i​d​e
			 */
			Hide: string
			/**
			 * U​p
			 */
			Up: string
			/**
			 * D​o​w​n
			 */
			Down: string
		}
		Modal: {
			/**
			 * L​e​g​e​n​d​ ​s​e​t​t​i​n​g​s
			 */
			Title: string
			/**
			 * L​e​g​e​n​d​ ​t​i​t​l​e
			 */
			LegendTitle: string
			/**
			 * L​e​g​e​n​d​ ​s​u​b​t​i​t​l​e
			 */
			LegendSubtitle: string
			/**
			 * L​e​g​e​n​d​ ​n​o​t​e
			 */
			LegendNote: string
			/**
			 * D​i​s​p​l​a​y​ ​a​ ​r​e​c​t​a​n​g​l​e​ ​u​n​d​e​r​ ​t​h​e​ ​l​e​g​e​n​d
			 */
			DisplayBackgroundRectangle: string
			/**
			 * B​a​c​k​g​r​o​u​n​d​ ​r​e​c​t​a​n​g​l​e​ ​c​o​l​o​r
			 */
			BackgroundRectangleColor: string
			/**
			 * B​a​c​k​g​r​o​u​n​d​ ​r​e​c​t​a​n​g​l​e​ ​f​i​l​l​ ​o​p​a​c​i​t​y
			 */
			BackgroundRectangleOpacity: string
			/**
			 * B​a​c​k​g​r​o​u​n​d​ ​r​e​c​t​a​n​g​l​e​ ​s​t​r​o​k​e​ ​c​o​l​o​r
			 */
			BackgroundRectangleStrokeColor: string
			/**
			 * B​a​c​k​g​r​o​u​n​d​ ​r​e​c​t​a​n​g​l​e​ ​s​t​r​o​k​e​ ​w​i​d​t​h
			 */
			BackgroundRectangleStrokeWidth: string
			/**
			 * B​a​c​k​g​r​o​u​n​d​ ​r​e​c​t​a​n​g​l​e​ ​s​t​r​o​k​e​ ​o​p​a​c​i​t​y
			 */
			BackgroundRectangleStrokeOpacity: string
			/**
			 * L​e​g​e​n​d​ ​o​r​i​e​n​t​a​t​i​o​n
			 */
			LegendOrientation: string
			/**
			 * H​o​r​i​z​o​n​t​a​l
			 */
			LegendOrientationHorizontal: string
			/**
			 * V​e​r​t​i​c​a​l
			 */
			LegendOrientationVertical: string
			/**
			 * L​e​g​e​n​d​ ​l​a​y​o​u​t
			 */
			LegendSymbolLayout: string
			/**
			 * V​e​r​t​i​c​a​l
			 */
			LegendSymbolLayoutVertical: string
			/**
			 * H​o​r​i​z​o​n​t​a​l
			 */
			LegendSymbolLayoutHorizontal: string
			/**
			 * S​t​a​c​k​e​d
			 */
			LegendSymbolLayoutStacked: string
			/**
			 * B​o​x​ ​w​i​d​t​h
			 */
			BoxWidth: string
			/**
			 * B​o​x​ ​h​e​i​g​h​t
			 */
			BoxHeight: string
			/**
			 * S​p​a​c​i​n​g​ ​b​e​t​w​e​e​n​ ​b​o​x​e​s
			 */
			BoxSpacing: string
			/**
			 * S​p​a​c​i​n​g​ ​b​e​t​w​e​e​n​ ​b​o​x​e​s​ ​a​n​d​ ​n​o​ ​d​a​t​a​ ​b​o​x
			 */
			BoxSpacingNoData: string
			/**
			 * L​a​b​e​l​ ​f​o​r​ ​t​h​e​ ​"​n​o​ ​d​a​t​a​"​ ​b​o​x
			 */
			NoDataLabel: string
			/**
			 * B​o​x​ ​c​o​r​n​e​r​ ​r​a​d​i​u​s
			 */
			BoxCornerRadius: string
			/**
			 * B​o​x​ ​s​t​r​o​k​e​ ​w​i​d​t​h
			 */
			BoxStrokeWidth: string
			/**
			 * R​o​u​n​d​ ​v​a​l​u​e​s
			 */
			RoundDecimals: string
			/**
			 * M​o​r​e​ ​o​p​t​i​o​n​s​.​.​.
			 */
			MoreOptions: string
			/**
			 * S​p​a​c​i​n​g​ ​b​e​t​w​e​e​n​ ​s​y​m​b​o​l​s
			 */
			SymbolsSpacing: string
			/**
			 * C​h​o​i​c​e​ ​o​f​ ​v​a​l​u​e​s
			 */
			ChooseValues: string
			/**
			 * L​i​n​e​ ​l​e​n​g​t​h
			 */
			LineLength: string
		}
	}
	CommonTextElement: {
		/**
		 * F​o​n​t​ ​s​i​z​e
		 */
		FontSize: string
		/**
		 * F​o​n​t​ ​c​o​l​o​r
		 */
		FontColor: string
		/**
		 * F​o​n​t​ ​f​a​m​i​l​y
		 */
		FontFamily: string
		/**
		 * F​o​n​t​ ​w​e​i​g​h​t
		 */
		FontWeight: string
		/**
		 * F​o​n​t​ ​s​t​y​l​e
		 */
		FontStyle: string
		/**
		 * N​o​r​m​a​l
		 */
		Normal: string
		/**
		 * B​o​l​d
		 */
		Bold: string
		/**
		 * I​t​a​l​i​c
		 */
		Italic: string
		/**
		 * U​n​d​e​r​l​i​n​e
		 */
		Underline: string
	}
}

export type TranslationFunctions = {
	/**
	 * Start Application
	 */
	StartApplication: () => LocalizedString
	/**
	 * Confirm
	 */
	SuccessButton: () => LocalizedString
	/**
	 * Cancel
	 */
	CancelButton: () => LocalizedString
	Alerts: {
		/**
		 * Delete layer
		 */
		DeleteLayer: () => LocalizedString
		/**
		 * Delete table
		 */
		DeleteTable: () => LocalizedString
		/**
		 * Create a new empty project ?
		 */
		EmptyProject: () => LocalizedString
		/**
		 * Save changes ?
		 */
		SaveEditedData: () => LocalizedString
		/**
		 * A project was automatically saved when the page was closed on {0}. Reload this project ?
		 */
		ReloadLastProject: (arg0: unknown) => LocalizedString
	}
	LoadingMessages: {
		/**
		 * Loading...
		 */
		Default: () => LocalizedString
		/**
		 * Reloading project...
		 */
		Reloading: () => LocalizedString
		/**
		 * Data preparation...
		 */
		SmoothingDataPreparation: () => LocalizedString
		/**
		 * Computing KDE on GPU...
		 */
		SmoothingComputingGPUKDE: () => LocalizedString
		/**
		 * Computing Stewart's potential on GPU...
		 */
		SmoothingComputingGPUStewart: () => LocalizedString
		/**
		 * Computing contours...
		 */
		SmoothingContours: () => LocalizedString
		/**
		 * Clipping contours with mask layer...
		 */
		SmoothingIntersections: () => LocalizedString
	}
	HeaderApp: {
		/**
		 * Night / Day mode
		 */
		NightDayMode: () => LocalizedString
		/**
		 * Import a Magrit project
		 */
		ImportProjet: () => LocalizedString
		/**
		 * Save project
		 */
		SaveProject: () => LocalizedString
		/**
		 * New project
		 */
		NewProject: () => LocalizedString
		/**
		 * About Magrit
		 */
		About: () => LocalizedString
		/**
		 * Language selection
		 */
		Language: () => LocalizedString
		/**
		 * Undo
		 */
		Undo: () => LocalizedString
		/**
		 * Redo
		 */
		Redo: () => LocalizedString
	}
	Pagination: {
		/**
		 * Next
		 */
		Next: () => LocalizedString
		/**
		 * Previous
		 */
		Previous: () => LocalizedString
	}
	DatasetCatalog: {
		/**
		 * Dataset catalog
		 */
		title: () => LocalizedString
		/**
		 * Search a dataset...
		 */
		placeholderSearchBar: () => LocalizedString
		/**
		 * Search
		 */
		searchButton: () => LocalizedString
		/**
		 * {{One dataset|?? datasets}}
		 */
		datasets: (arg0: number | string | boolean) => LocalizedString
		/**
		 * About
		 */
		about: () => LocalizedString
		/**
		 * Description
		 */
		description: () => LocalizedString
		/**
		 * Preview
		 */
		preview: () => LocalizedString
		/**
		 * License
		 */
		license: () => LocalizedString
		/**
		 * Type
		 */
		type: () => LocalizedString
		types: {
			/**
			 * Vector dataset
			 */
			vector: () => LocalizedString
			/**
			 * Raster dataset
			 */
			raster: () => LocalizedString
		}
		/**
		 * Provider
		 */
		provider: () => LocalizedString
		/**
		 * Attributions
		 */
		attributions: () => LocalizedString
		/**
		 * Date
		 */
		date: () => LocalizedString
		/**
		 * Source
		 */
		source: () => LocalizedString
		/**
		 * {{One feature|?? features}}
		 */
		features: (arg0: number | string | boolean) => LocalizedString
		/**
		 * Direct link to the dataset
		 */
		directLink: () => LocalizedString
		/**
		 * Select a dataset to see its details.
		 */
		placeholderDatasetDetail: () => LocalizedString
		/**
		 * No dataset matches your search.
		 */
		noSearchResult: () => LocalizedString
		/**
		 * Dataset preview
		 */
		altDatasetPreview: () => LocalizedString
		/**
		 * Add to map
		 */
		confirmButton: () => LocalizedString
		/**
		 * Cancel
		 */
		cancelButton: () => LocalizedString
	}
	ImportWindow: {
		/**
		 * Data import
		 */
		Title: () => LocalizedString
		/**
		 * Drag and drop one or more datasets here (geographical or tabular) or click here to select a file.
		 */
		Instructions: () => LocalizedString
		/**
		 * Supported vector formats are: ESRI Shapefile (.shp, .shx, .dbf, .prj, .cpg), GeoPackage (.gpkg), GeoJSON (.geojson or .json), TopoJSON (.topojson or .json), GML (.gml) and KML (.kml).
		 */
		SupportedVectorFormats: () => LocalizedString
		/**
		 * Supported tabular formats are: Excel (.xls, .xlsx), CSV (.csv), TSV (.tsv) and OpenDocument Spreadsheet (.ods).
		 */
		SupportedTabularFormats: () => LocalizedString
		/**
		 * Analyzing dataset...
		 */
		AnalyzingDataset: () => LocalizedString
		/**
		 * Cancel
		 */
		CancelButton: () => LocalizedString
		/**
		 * {{No dataset to import|Import dataset|Import ?? datasets}}
		 */
		ImportButton: (arg0: number | string | boolean) => LocalizedString
		/**
		 * Layer name
		 */
		LayerName: () => LocalizedString
		/**
		 * Features
		 */
		Features: () => LocalizedString
		/**
		 * Geometry type
		 */
		GeometryType: () => LocalizedString
		/**
		 * CRS
		 */
		CRS: () => LocalizedString
		/**
		 * Use this projection
		 */
		UseProjection: () => LocalizedString
		/**
		 * Simplify
		 */
		Simplify: () => LocalizedString
		/**
		 * Simplification is only available for (Multi)LineString and (Multi)Polygon vector layers.
		 */
		SimplifyDisabledTooltip: () => LocalizedString
		/**
		 * Simplify the geometries of the layer to reduce the size of the dataset and improve performance. A new window will open to allow you to choose the simplification options.
		 */
		SimplifyTooltip: () => LocalizedString
		/**
		 * Fit extent
		 */
		FitExtent: () => LocalizedString
		/**
		 * Delete ?
		 */
		Delete: () => LocalizedString
		/**
		 * Incomplete
		 */
		Incomplete: () => LocalizedString
		/**
		 * The dataset is incomplete and cannot be imported. Please add the other mandatory files.
		 */
		IncompleteMessage: () => LocalizedString
		/**
		 * Unsupported file format for {file}
		 */
		UnsupportedFileFormat: (arg: { file: unknown }) => LocalizedString
		/**
		 * Error while reading file {file}: {message}
		 */
		ErrorReadingFile: (arg: { file: unknown, message: unknown }) => LocalizedString
		/**
		 * Removed {{0 feature|a feature|?? features}} without geometry
		 */
		RemovedEmptyFeatures: (arg0: number | string | boolean) => LocalizedString
	}
	MapZone: {
		/**
		 * Drag and drop your file(s) here ! (or use the import menu)
		 */
		DropFilesHere: () => LocalizedString
	}
	LeftMenu: {
		/**
		 * Data import
		 */
		Import: () => LocalizedString
		/**
		 * Map configuration
		 */
		MapConfiguration: () => LocalizedString
		/**
		 * Layer manager
		 */
		LayerManager: () => LocalizedString
		/**
		 * Representation choice
		 */
		RepresentationChoice: () => LocalizedString
		/**
		 * Map and data export
		 */
		ExportSection: () => LocalizedString
		/**
		 * Page layout and skin elements
		 */
		LayoutFeatures: () => LocalizedString
	}
	ImportSection: {
		/**
		 * Open data import window...
		 */
		OpenImportWindow: () => LocalizedString
		/**
		 * Example datasets
		 */
		ExampleDatasets: () => LocalizedString
	}
	MapConfiguration: {
		/**
		 * Dimensions
		 */
		Dimensions: () => LocalizedString
		/**
		 * Width
		 */
		Width: () => LocalizedString
		/**
		 * Height
		 */
		Height: () => LocalizedString
		/**
		 * Projection
		 */
		Projection: () => LocalizedString
		/**
		 * More projections
		 */
		MoreProjection: () => LocalizedString
		/**
		 * Custom projection...
		 */
		CustomProjection: () => LocalizedString
		/**
		 * Lock zoom / position
		 */
		LockZoom: () => LocalizedString
	}
	LayoutFeatures: {
		/**
		 * Background color
		 */
		BackgroundColor: () => LocalizedString
		/**
		 * Opacity
		 */
		Opacity: () => LocalizedString
		/**
		 * Map skin elements
		 */
		MapSkinElements: () => LocalizedString
		/**
		 * Sphere
		 */
		Sphere: () => LocalizedString
		/**
		 * Graticule
		 */
		Graticule: () => LocalizedString
		/**
		 * Rectangle
		 */
		Rectangle: () => LocalizedString
		/**
		 * Line / Arrow
		 */
		Line: () => LocalizedString
		/**
		 * Text
		 */
		Text: () => LocalizedString
		/**
		 * Image
		 */
		Image: () => LocalizedString
		/**
		 * Scale bar
		 */
		ScaleBar: () => LocalizedString
		/**
		 * North arrow
		 */
		NorthArrow: () => LocalizedString
		/**
		 * Free drawing
		 */
		FreeDrawing: () => LocalizedString
		ContextMenu: {
			/**
			 * Edit settings...
			 */
			EditSettings: () => LocalizedString
			/**
			 * Edit
			 */
			Edit: () => LocalizedString
			/**
			 * Delete
			 */
			Delete: () => LocalizedString
			/**
			 * Up
			 */
			Up: () => LocalizedString
			/**
			 * Down
			 */
			Down: () => LocalizedString
			/**
			 * Clone
			 */
			Clone: () => LocalizedString
		}
		ConfirmationMessages: {
			/**
			 * The "Sphere" layer has been added to the map.
			 */
			Sphere: () => LocalizedString
			/**
			 * The "Graticule" layer has been added to the map.
			 */
			Graticule: () => LocalizedString
		}
		DrawingInstructions: {
			/**
			 * Click to start drawing a line. Click again to add a point. Double-click to finish.
		Hold the Ctrl key to draw a straight line.
			 */
			Line: () => LocalizedString
			/**
			 * Click to locate the first corner of the rectangle. Click again to locate the opposite corner.
			 */
			Rectangle: () => LocalizedString
			/**
			 * Click to start drawing the desired shape and release to finish.
			 */
			FreeDrawing: () => LocalizedString
			/**
			 * Click to locate the text.
			 */
			Text: () => LocalizedString
			/**
			 * Type your text here...
			 */
			TextPlaceholder: () => LocalizedString
			/**
			 * Press Esc to cancel.
			 */
			PressEscToCancel: () => LocalizedString
		}
		Modal: {
			/**
			 * Settings
			 */
			Title: () => LocalizedString
			/**
			 * Fill color
			 */
			FillColor: () => LocalizedString
			/**
			 * Fill opacity
			 */
			FillOpacity: () => LocalizedString
			/**
			 * Stroke color
			 */
			StrokeColor: () => LocalizedString
			/**
			 * Stroke width
			 */
			StrokeWidth: () => LocalizedString
			/**
			 * Stroke opacity
			 */
			StrokeOpacity: () => LocalizedString
			/**
			 * Round corners
			 */
			RoundCorners: () => LocalizedString
			/**
			 * Rotation
			 */
			Rotation: () => LocalizedString
			/**
			 * Rotate manually
			 */
			RotateManually: () => LocalizedString
			/**
			 * Rotate automatically to geographic north
			 */
			RotateToNorth: () => LocalizedString
			/**
			 * North arrow type
			 */
			NorthArrowType: () => LocalizedString
			/**
			 * Simple north arrow
			 */
			SimpleNorthArrow: () => LocalizedString
			/**
			 * Fancy north arrow
			 */
			FancyNorthArrow: () => LocalizedString
			/**
			 * Width
			 */
			Width: () => LocalizedString
			/**
			 * Height
			 */
			Height: () => LocalizedString
			/**
			 * Taille
			 */
			Size: () => LocalizedString
			/**
			 * Scale bar behavior
			 */
			ScaleBarBehavior: () => LocalizedString
			/**
			 * Fixed size (in px), displayed distance computed dynamically
			 */
			ScaleBarAbsoluteSize: () => LocalizedString
			/**
			 * Fixed distance (in distance unit), size (in px) computed dynamically
			 */
			ScaleBarGeographicSize: () => LocalizedString
			/**
			 * Distance unit
			 */
			Units: () => LocalizedString
			/**
			 * Distance unit label
			 */
			UnitLabel: () => LocalizedString
			/**
			 * Meters
			 */
			m: () => LocalizedString
			/**
			 * Kilometers
			 */
			km: () => LocalizedString
			/**
			 * Miles
			 */
			mi: () => LocalizedString
			/**
			 * Feet
			 */
			ft: () => LocalizedString
			/**
			 * Yards
			 */
			yd: () => LocalizedString
			/**
			 * Nautical miles
			 */
			nmi: () => LocalizedString
			/**
			 * Scale bar type
			 */
			ScaleBarType: () => LocalizedString
			/**
			 * Simple line
			 */
			simpleLine: () => LocalizedString
			/**
			 * Line with ticks on top
			 */
			lineWithTicksOnTop: () => LocalizedString
			/**
			 * Line with ticks on bottom
			 */
			lineWithTicksOnBottom: () => LocalizedString
			/**
			 * Black and white bar
			 */
			blackAndWhiteBar: () => LocalizedString
			/**
			 * Tick values (comma separated, starting from 0)
			 */
			TickValues: () => LocalizedString
			/**
			 * Text content
			 */
			TextContent: () => LocalizedString
			/**
			 * Text properties
			 */
			TextProperties: () => LocalizedString
			/**
			 * Font size
			 */
			FontSize: () => LocalizedString
			/**
			 * Font family
			 */
			FontFamily: () => LocalizedString
			/**
			 * Font weight
			 */
			FontWeight: () => LocalizedString
			/**
			 * Font style
			 */
			FontStyle: () => LocalizedString
			/**
			 * Normal
			 */
			Normal: () => LocalizedString
			/**
			 * Bold
			 */
			Bold: () => LocalizedString
			/**
			 * Italic
			 */
			Italic: () => LocalizedString
			/**
			 * Underline
			 */
			Underline: () => LocalizedString
			/**
			 * Text anchor
			 */
			TextAnchor: () => LocalizedString
			/**
			 * Start
			 */
			Start: () => LocalizedString
			/**
			 * Middle
			 */
			Middle: () => LocalizedString
			/**
			 * End
			 */
			End: () => LocalizedString
			/**
			 * Allow modifying fill and stroke properties
			 */
			AllowModifyingFillStroke: () => LocalizedString
		}
	}
	AboutPanel: {
		/**
		 * About Magrit
		 */
		title: () => LocalizedString
		/**
		 * Magrit is an open source Web application for the visualization and the analysis of geospatial data. It is developed by the UAR RIATE (CNRS, Université Paris Cité).
		 */
		description: () => LocalizedString
		/**
		 * Useful links:
		 */
		usefulLinks: () => LocalizedString
		/**
		 * UAR RIATE
		 */
		UarRiate: () => LocalizedString
		/**
		 * GitHub project page
		 */
		linkGithub: () => LocalizedString
		/**
		 * GitHub issues
		 */
		linkGithubIssues: () => LocalizedString
		/**
		 * Documentation
		 */
		documentation: () => LocalizedString
	}
	LayerManager: {
		/**
		 * Point layer
		 */
		point: () => LocalizedString
		/**
		 * Line layer
		 */
		linestring: () => LocalizedString
		/**
		 * Polygon layer
		 */
		polygon: () => LocalizedString
		/**
		 * Raster layer
		 */
		raster: () => LocalizedString
		/**
		 * Data table
		 */
		table: () => LocalizedString
		/**
		 * Remove layer
		 */
		Delete: () => LocalizedString
		/**
		 * Join to a geospatial layer
		 */
		Join: () => LocalizedString
		/**
		 * Attribute table
		 */
		AttributeTable: () => LocalizedString
		/**
		 * Zoom on layer
		 */
		FitZoom: () => LocalizedString
		/**
		 * Toggle visibility
		 */
		ToggleVisibility: () => LocalizedString
		/**
		 * Settings
		 */
		Settings: () => LocalizedString
		/**
		 * Fields typing
		 */
		Typing: () => LocalizedString
		/**
		 * Display / hide legend
		 */
		Legend: () => LocalizedString
		/**
		 * The position of the legend has been changed to reposition it in the map display area.
		 */
		LegendDisplacement: () => LocalizedString
	}
	PortrayalSection: {
		PortrayalTypes: {
			/**
			 * Choropleth
			 */
			Choropleth: () => LocalizedString
			/**
			 * Proportional symbols
			 */
			ProportionalSymbols: () => LocalizedString
			/**
			 * Labels
			 */
			Labels: () => LocalizedString
			/**
			 * Discontinuity
			 */
			Discontinuity: () => LocalizedString
			/**
			 * Categorical choropleth
			 */
			CategoricalChoropleth: () => LocalizedString
			/**
			 * Smoothed map
			 */
			Smoothed: () => LocalizedString
			/**
			 * Cartogram
			 */
			Cartogram: () => LocalizedString
			/**
			 * Grid
			 */
			Grid: () => LocalizedString
			/**
			 * No portrayal for the selected layer - Please verify the typing of the fields or select another layer
			 */
			NoPortrayal: () => LocalizedString
		}
		/**
		 * Open portrayal selection modal...
		 */
		OpenModal: () => LocalizedString
		/**
		 * Representation choice
		 */
		RepresentationChoice: () => LocalizedString
		/**
		 * Choose a representation
		 */
		ChooseARepresentation: () => LocalizedString
		/**
		 * Layer: 
		 */
		DropdownPrefixLayer: () => LocalizedString
		/**
		 * Target layer
		 */
		TargetLayer: () => LocalizedString
		/**
		 * Create layer
		 */
		CreateLayer: () => LocalizedString
		/**
		 * Result name
		 */
		ResultName: () => LocalizedString
		/**
		 * Type the name of the layer to create
		 */
		ResultNamePlaceholder: () => LocalizedString
		/**
		 * New_layer
		 */
		NewLayer: () => LocalizedString
		CommonOptions: {
			/**
			 * Variable
			 */
			Variable: () => LocalizedString
			/**
			 * Color
			 */
			Color: () => LocalizedString
		}
		ChoroplethOptions: {
			/**
			 * Choropleth
			 */
			Choropleth: () => LocalizedString
			/**
			 * Classification
			 */
			Classification: () => LocalizedString
			/**
			 * Color scheme
			 */
			ColorScheme: () => LocalizedString
			/**
			 * Invert color scheme
			 */
			ColorSchemeInvert: () => LocalizedString
			/**
			 * {{One class|?? classes}}
			 */
			CurrentNumberOfClasses: (arg0: number | string | boolean) => LocalizedString
			/**
			 * Display a class summary chart on the map
			 */
			DisplayChartOnMap: () => LocalizedString
		}
		ProportionalSymbolsOptions: {
			/**
			 * Reference size (px)
			 */
			ReferenceSize: () => LocalizedString
			/**
			 * On value
			 */
			OnValue: () => LocalizedString
			/**
			 * Symbol type
			 */
			SymbolType: () => LocalizedString
			SymbolTypes: {
				/**
				 * Circle
				 */
				circle: () => LocalizedString
				/**
				 * Square
				 */
				square: () => LocalizedString
				/**
				 * Line
				 */
				line: () => LocalizedString
			}
			/**
			 * Avoid overlapping symbols
			 */
			AvoidOverlapping: () => LocalizedString
			/**
			 * Limit value
			 */
			LimitValue: () => LocalizedString
		}
		DiscontinuityOptions: {
			/**
			 * Discontinuity type
			 */
			DiscontinuityType: () => LocalizedString
			/**
			 * Relative
			 */
			Relative: () => LocalizedString
			/**
			 * Absolute
			 */
			Absolute: () => LocalizedString
			/**
			 * Classification type
			 */
			Classification: () => LocalizedString
			/**
			 * Threshold of discontinuity to display
			 */
			DiscontinuityThreshold: () => LocalizedString
		}
		SmoothingOptions: {
			/**
			 * Smoothing type
			 */
			Type: () => LocalizedString
			/**
			 * Grid resolution (km)
			 */
			Resolution: () => LocalizedString
			/**
			 * Stewart's potential
			 */
			Stewart: () => LocalizedString
			/**
			 * Kernel density estimation
			 */
			KDE: () => LocalizedString
			/**
			 * Bandwidth
			 */
			Bandwidth: () => LocalizedString
			/**
			 * Kernel type
			 */
			KernelType: () => LocalizedString
			/**
			 * Pareto
			 */
			Pareto: () => LocalizedString
			/**
			 * Gaussian
			 */
			Gaussian: () => LocalizedString
			/**
			 * Epanechnikov
			 */
			Epanechnikov: () => LocalizedString
			/**
			 * Quartic
			 */
			Quartic: () => LocalizedString
			/**
			 * Triangular
			 */
			Triangular: () => LocalizedString
			/**
			 * Uniform
			 */
			Uniform: () => LocalizedString
			/**
			 * Biweight
			 */
			Biweight: () => LocalizedString
			/**
			 * Span
			 */
			Span: () => LocalizedString
			/**
			 * Alpha
			 */
			Alpha: () => LocalizedString
			/**
			 * Beta
			 */
			Beta: () => LocalizedString
		}
		CartogramOptions: {
			/**
			 * Algorithm to use
			 */
			Algorithm: () => LocalizedString
			/**
			 * Iterations
			 */
			Iterations: () => LocalizedString
			/**
			 * Dougenik et al. (1985)
			 */
			Dougenik: () => LocalizedString
			/**
			 * Olson (2005)
			 */
			Olson: () => LocalizedString
			/**
			 * Gastner, Seguy & More (2018)
			 */
			GastnerSeguyMore: () => LocalizedString
		}
		GridOptions: {
			/**
			 * Grid resolution (km)
			 */
			Resolution: () => LocalizedString
			/**
			 * Grid resolution ({unit})
			 */
			ResolutionWithUnit: (arg: { unit: unknown }) => LocalizedString
			/**
			 * Cell shape
			 */
			CellShape: () => LocalizedString
			/**
			 * Square
			 */
			CellSquare: () => LocalizedString
			/**
			 * Hexagon
			 */
			CellHexagon: () => LocalizedString
			/**
			 * Triangle
			 */
			CellTriangle: () => LocalizedString
			/**
			 * Diamond
			 */
			CellDiamond: () => LocalizedString
			/**
			 * The current map projection is geographic (or its unit is degrees). The grid resolution is therefore expressed in degrees. Whenever possible, you should use projected data (with a distance unit in metres, for example) for greater accuracy.
			 */
			WarningGeo: () => LocalizedString
		}
		CategoricalChoroplethOptions: {
			/**
			 * Display the frequency histogram by category on the map
			 */
			DisplayChartOnMap: () => LocalizedString
			/**
			 * {{One category|?? categories}}
			 */
			Categories: (arg0: number | string | boolean) => LocalizedString
			/**
			 * Contains null or empty values
			 */
			HasNull: () => LocalizedString
		}
	}
	ExportSection: {
		/**
		 * Select a layer
		 */
		SelectLayers: () => LocalizedString
		/**
		 * Select a format
		 */
		SelectFormat: () => LocalizedString
		/**
		 * Select a CRS
		 */
		SelectCRS: () => LocalizedString
		/**
		 * Layers
		 */
		Layers: () => LocalizedString
		/**
		 * Export
		 */
		Export: () => LocalizedString
		/**
		 * Export as PNG
		 */
		ExportPng: () => LocalizedString
		/**
		 * Export as SVG
		 */
		ExportSvg: () => LocalizedString
		/**
		 * Custom CRS
		 */
		CustomCRS: () => LocalizedString
		/**
		 * Clip SVG to current extent
		 */
		ClipSvgCurrentExtent: () => LocalizedString
		/**
		 * Width (px)
		 */
		Width: () => LocalizedString
		/**
		 * Height (px)
		 */
		Height: () => LocalizedString
	}
	LayerSettings: {
		/**
		 * Layer settings
		 */
		LayerSettings: () => LocalizedString
		/**
		 * Name
		 */
		Name: () => LocalizedString
		/**
		 * Fill color
		 */
		FillColor: () => LocalizedString
		/**
		 * Stroke color
		 */
		StrokeColor: () => LocalizedString
		/**
		 * Fill opacity
		 */
		FillOpacity: () => LocalizedString
		/**
		 * Stroke opacity
		 */
		StrokeOpacity: () => LocalizedString
		/**
		 * Stroke width
		 */
		StrokeWidth: () => LocalizedString
		/**
		 * Point radius
		 */
		PointRadius: () => LocalizedString
		/**
		 * Aesthetic filter
		 */
		AestheticFilter: () => LocalizedString
		/**
		 * Add a shadow
		 */
		DropShadow: () => LocalizedString
		/**
		 * Blur
		 */
		Blur: () => LocalizedString
		/**
		 * Allow moving symbols
		 */
		AllowMovingSymbols: () => LocalizedString
		/**
		 * Change classification options
		 */
		ChangeClassification: () => LocalizedString
		/**
		 * Font family
		 */
		FontFamily: () => LocalizedString
		/**
		 * Font size
		 */
		FontSize: () => LocalizedString
		/**
		 * Text color
		 */
		TextColor: () => LocalizedString
		/**
		 * X offset
		 */
		XOffset: () => LocalizedString
		/**
		 * Y offset
		 */
		YOffset: () => LocalizedString
		/**
		 * Font style
		 */
		FontStyle: () => LocalizedString
		/**
		 * Font weight
		 */
		FontWeight: () => LocalizedString
		/**
		 * Buffer around text
		 */
		BufferAroundText: () => LocalizedString
		/**
		 * Buffer color
		 */
		BufferColor: () => LocalizedString
		/**
		 * Buffer width
		 */
		BufferWidth: () => LocalizedString
		/**
		 * Allow moving labels
		 */
		AllowMovingLabels: () => LocalizedString
		/**
		 * Palette
		 */
		Palette: () => LocalizedString
	}
	JoinPanel: {
		/**
		 * Join to a geospatial layer
		 */
		Title: () => LocalizedString
		/**
		 * This feature allows you to join data from a table to a geospatial layer. Data from the table is added to the geospatial layer based on a field common to both datasets.
		 */
		Information: () => LocalizedString
		/**
		 * Only fields with unique values are available for the join.
		 */
		Information2: () => LocalizedString
		/**
		 * Select the layer to join to
		 */
		TargetLayer: () => LocalizedString
		/**
		 * Select a layer
		 */
		TargetLayerPlaceholder: () => LocalizedString
		/**
		 * Select the field to join on (table)
		 */
		JoinFieldTable: () => LocalizedString
		/**
		 * Select the field to join on (layer)
		 */
		JoinFieldLayer: () => LocalizedString
		/**
		 * Select a field
		 */
		JoinFieldPlaceholder: () => LocalizedString
		/**
		 * Computing join...
		 */
		Loading: () => LocalizedString
		/**
		 * Result information:
		 */
		ResultInformation: () => LocalizedString
		/**
		 * Geometries having a match:
		 */
		MatchedGeometry: () => LocalizedString
		/**
		 * Table rows having a match:
		 */
		MatchedData: () => LocalizedString
		/**
		 * no data
		 */
		NoData: () => LocalizedString
		/**
		 * Use a prefix for the joined fields ?
		 */
		Prefix: () => LocalizedString
		/**
		 * Prefix
		 */
		PrefixValue: () => LocalizedString
		/**
		 * Select the fields to join ?
		 */
		SelectFields: () => LocalizedString
		/**
		 * Add fields to the selected layer
		 */
		Confirm: () => LocalizedString
	}
	PortrayalSelection: {
		/**
		 * Portrayal selection
		 */
		Title: () => LocalizedString
		/**
		 * Options for the selected portrayal
		 */
		Title2: () => LocalizedString
		/**
		 * Layer:
		 */
		Layer: () => LocalizedString
		/**
		 * Back to portrayal selection
		 */
		Back: () => LocalizedString
		/**
		 * Select the representation you wish to apply to your data layer. Greyed-out representations indicate that your dataset does not contain any data allowing you to perform this type of representation. If you suspect this is an error, you can change the field type in the Layer Manager.
		 */
		Information: () => LocalizedString
		ShortDescriptions: {
			/**
			 * A choropleth map is a thematic map in which areas are shaded or patterned in proportion to the value of a variable.
			 */
			Choropleth: () => LocalizedString
			/**
			 * A proportional symbols map is a thematic map in which the size of a symbol varies in proportion to the value of a variable.
			 */
			ProportionalSymbols: () => LocalizedString
			/**
			 * A labels map is a thematic map in which the value of a variable is displayed as a label.
			 */
			Labels: () => LocalizedString
			/**
			 * A discontinuity map is a thematic map in which areas are shaded or patterned in proportion to the value of a variable, but with a discontinuity at a given threshold.
			 */
			Discontinuity: () => LocalizedString
			/**
			 * A categorical choropleth map is a thematic map in which areas are shaded or patterned in proportion to the value of a categorical variable.
			 */
			CategoricalChoropleth: () => LocalizedString
			/**
			 * A smoothed map is a thematic map in which the value of a variable is smoothed using a kernel density estimation.
			 */
			Smoothed: () => LocalizedString
			/**
			 * A cartogram is a thematic map in which the geometry of areas is distorted in proportion to the value of a variable.
			 */
			Cartogram: () => LocalizedString
			/**
			 * A grid map is a thematic map in which areas are shaded or patterned in proportion to the value of a variable, but with a grid layout.
			 */
			Grid: () => LocalizedString
		}
		LongDescriptions: {
			Choropleth: () => LocalizedString
		}
	}
	ProjectionSelection: {
		/**
		 * Projection selection
		 */
		title: () => LocalizedString
		/**
		 * Enter an EPSG code or a projection name
		 */
		SearchProjection: () => LocalizedString
		/**
		 * {{No matching projection|One projection found|?? projections found}}
		 */
		NMatchingProjections: (arg0: number | string | boolean) => LocalizedString
		/**
		 * Too many results, please refine your search.
		 */
		TooManyResults: () => LocalizedString
		/**
		 * Kind:
		 */
		Kind: () => LocalizedString
		/**
		 * Projected coordinate reference system
		 */
		ProjCRS: () => LocalizedString
		/**
		 * Geographic coordinate reference system
		 */
		GeogCRS: () => LocalizedString
		/**
		 * Bounding box (geographic coordinates):
		 */
		BboxGeo: () => LocalizedString
		/**
		 * Bounding box (projected coordinates):
		 */
		BboxProjected: () => LocalizedString
		/**
		 * Area:
		 */
		Area: () => LocalizedString
		/**
		 * Unit:
		 */
		Unit: () => LocalizedString
		/**
		 * More information
		 */
		MoreInformation: () => LocalizedString
	}
	ImageSymbolSelection: {
		/**
		 * Image import and selection
		 */
		Title: () => LocalizedString
		/**
		 * Select a symbol among the available ones...
		 */
		SelectImage: () => LocalizedString
		/**
		 * Or upload an image (PNG or SVG)...
		 */
		UploadImage: () => LocalizedString
		/**
		 * Browse...
		 */
		Browse: () => LocalizedString
		/**
		 * Selected image:
		 */
		SelectedImage: () => LocalizedString
	}
	SimplificationModal: {
		/**
		 * Simplification of geometries
		 */
		title: () => LocalizedString
	}
	DataTable: {
		/**
		 * Attribute table
		 */
		titleGeo: () => LocalizedString
		/**
		 * Data table
		 */
		titleTabular: () => LocalizedString
		/**
		 * {{One feature|?? features}}
		 */
		Features: (arg0: number | string | boolean) => LocalizedString
		/**
		 * {{One column|?? columns}}
		 */
		Columns: (arg0: number | string | boolean) => LocalizedString
		/**
		 * Export as CSV...
		 */
		ExportCsv: () => LocalizedString
		/**
		 * New column...
		 */
		NewColumn: () => LocalizedString
		/**
		 * Delete column
		 */
		DeleteColumn: () => LocalizedString
		NewColumnModal: {
			/**
			 * Back to data table
			 */
			BackToDatatable: () => LocalizedString
			/**
			 * New column
			 */
			title: () => LocalizedString
			/**
			 * Name
			 */
			name: () => LocalizedString
			/**
			 * Type the name of the column
			 */
			namePlaceholder: () => LocalizedString
			/**
			 * New column type
			 */
			newColumnType: () => LocalizedString
			/**
			 * Formula
			 */
			formula: () => LocalizedString
			/**
			 * Compute
			 */
			compute: () => LocalizedString
			/**
			 * Sample output
			 */
			sampleOutput: () => LocalizedString
			/**
			 * Error while parsing the formula
			 */
			errorParsingFormula: () => LocalizedString
			/**
			 * Error - empty result
			 */
			errorEmptyResult: () => LocalizedString
			/**
			 * Note that column names containing special characters or spaces must be enclosed in backticks or in brackets.
			 */
			noteSpecialCharacters: () => LocalizedString
			/**
			 * Division
			 */
			'/': () => LocalizedString
			/**
			 * Addition
			 */
			'+': () => LocalizedString
			/**
			 * Subtraction
			 */
			'-': () => LocalizedString
			/**
			 * Multiplication
			 */
			'*': () => LocalizedString
			/**
			 * Power operator
			 */
			'POWER()': () => LocalizedString
			/**
			 * Concatenate 2 or more strings
			 */
			'CONCAT()': () => LocalizedString
			/**
			 * Extract a substring
			 */
			'SUBSTRING()': () => LocalizedString
			/**
			 * Special field - The length of the dataset (number of features)
			 */
			specialFieldLength: () => LocalizedString
			/**
			 * Special field - The area of the feature, in square meters (only for polygon layers). Note that this calculation is based on the geographical coordinates and is made on the spheroid. This result may be less accurate than if the calculation had been carried out in a local projection based on an adapted ellipsoid.
			 */
			specialFieldArea: () => LocalizedString
			/**
			 * Special field - The (internal) row id of the feature
			 */
			specialFieldId: () => LocalizedString
		}
	}
	FieldsTyping: {
		/**
		 * Fields typing
		 */
		ModalTitle: () => LocalizedString
		/**
		 * Field name
		 */
		FieldName: () => LocalizedString
		/**
		 * Field type
		 */
		FieldType: () => LocalizedString
		VariableTypes: {
			/**
			 * Identifier
			 */
			identifier: () => LocalizedString
			/**
			 * Ratio
			 */
			ratio: () => LocalizedString
			/**
			 * Stock
			 */
			stock: () => LocalizedString
			/**
			 * Categorical
			 */
			categorical: () => LocalizedString
			/**
			 * Unknown
			 */
			unknown: () => LocalizedString
		}
	}
	ClassificationPanel: {
		/**
		 * Classification
		 */
		title: () => LocalizedString
		/**
		 * Box
		 */
		box: () => LocalizedString
		/**
		 * Histogram
		 */
		histogram: () => LocalizedString
		/**
		 * Beeswarm
		 */
		beeswarm: () => LocalizedString
		/**
		 * Dot histogram
		 */
		dotHistogram: () => LocalizedString
		/**
		 * Histogram and density
		 */
		histogramAndDensity: () => LocalizedString
		/**
		 * Values distribution
		 */
		distribution: () => LocalizedString
		/**
		 * Summary
		 */
		summary: () => LocalizedString
		/**
		 * Population (non-null values)
		 */
		population: () => LocalizedString
		/**
		 * Minimum
		 */
		minimum: () => LocalizedString
		/**
		 * Maximum
		 */
		maximum: () => LocalizedString
		/**
		 * Mean
		 */
		mean: () => LocalizedString
		/**
		 * Median
		 */
		median: () => LocalizedString
		/**
		 * Standard deviation
		 */
		standardDeviation: () => LocalizedString
		/**
		 * Variance
		 */
		variance: () => LocalizedString
		/**
		 * Variance coefficient
		 */
		varianceCoefficient: () => LocalizedString
		/**
		 * Skewness
		 */
		skewness: () => LocalizedString
		/**
		 * Classification
		 */
		classification: () => LocalizedString
		/**
		 * Classification method
		 */
		classificationMethod: () => LocalizedString
		classificationMethods: {
			/**
			 * Equal intervals
			 */
			equalIntervals: () => LocalizedString
			/**
			 * Quantiles
			 */
			quantiles: () => LocalizedString
			/**
			 * Jenks
			 */
			jenks: () => LocalizedString
			/**
			 * Standard deviation
			 */
			standardDeviation: () => LocalizedString
			/**
			 * Q6
			 */
			q6: () => LocalizedString
			/**
			 * Pretty
			 */
			pretty: () => LocalizedString
			/**
			 * Geometric progression
			 */
			geometricProgression: () => LocalizedString
			/**
			 * Arithmetic progression
			 */
			arithmeticProgression: () => LocalizedString
			/**
			 * Head/tail
			 */
			headTail: () => LocalizedString
			/**
			 * Manual
			 */
			manual: () => LocalizedString
		}
		classificationMethodLegendDescriptions: {
			/**
			 * Classified using equal intervals
			 */
			equalIntervals: () => LocalizedString
			/**
			 * Classified using quantiles
			 */
			quantiles: () => LocalizedString
			/**
			 * Classified using natural breaks (Jenks)
			 */
			jenks: () => LocalizedString
			/**
			 * Classified using mean and standard deviation
			 */
			standardDeviation: () => LocalizedString
			/**
			 * Classified using the Q6 method
			 */
			q6: () => LocalizedString
			/**
			 * Classified using the "pretty breaks" method
			 */
			pretty: () => LocalizedString
			/**
			 * Classified using a geometric progression
			 */
			geometricProgression: () => LocalizedString
			/**
			 * Classified using an arithmetic progression
			 */
			arithmeticProgression: () => LocalizedString
			/**
			 * Classified using the head/tail break method
			 */
			headTail: () => LocalizedString
			/**
			 * Classified manually
			 */
			manual: () => LocalizedString
		}
		/**
		 * Number of classes
		 */
		numberOfClasses: () => LocalizedString
		/**
		 * Mean value position
		 */
		meanPosition: () => LocalizedString
		/**
		 * Class center
		 */
		meanPositionCenter: () => LocalizedString
		/**
		 * Class boundary
		 */
		meanPositionBoundary: () => LocalizedString
		/**
		 * Amplitude
		 */
		amplitude: () => LocalizedString
		/**
		 * standard deviations
		 */
		howManyStdDev: () => LocalizedString
		/**
		 * Color scheme type
		 */
		typeScheme: () => LocalizedString
		/**
		 * Sequential
		 */
		sequential: () => LocalizedString
		/**
		 * Diverging
		 */
		diverging: () => LocalizedString
		/**
		 * Palette
		 */
		palette: () => LocalizedString
		/**
		 * Reverse palette
		 */
		reversePalette: () => LocalizedString
		/**
		 * Central class
		 */
		centralClass: () => LocalizedString
		/**
		 * Display mean
		 */
		displayMean: () => LocalizedString
		/**
		 * Display median
		 */
		displayMedian: () => LocalizedString
		/**
		 * Display standard deviation
		 */
		displayStdDev: () => LocalizedString
		/**
		 * Logarithmic scale
		 */
		logarithmicScale: () => LocalizedString
		/**
		 * Enter class limits
		 */
		breaksInput: () => LocalizedString
		/**
		 * Validate
		 */
		validate: () => LocalizedString
		/**
		 * {{One feature without data|?? features without data}}
		 */
		missingValues: (arg0: number | string | boolean) => LocalizedString
		/**
		 * Features per class
		 */
		count: () => LocalizedString
	}
	Legend: {
		ContextMenu: {
			/**
			 * Edit settings...
			 */
			EditSettings: () => LocalizedString
			/**
			 * Hide
			 */
			Hide: () => LocalizedString
			/**
			 * Up
			 */
			Up: () => LocalizedString
			/**
			 * Down
			 */
			Down: () => LocalizedString
		}
		Modal: {
			/**
			 * Legend settings
			 */
			Title: () => LocalizedString
			/**
			 * Legend title
			 */
			LegendTitle: () => LocalizedString
			/**
			 * Legend subtitle
			 */
			LegendSubtitle: () => LocalizedString
			/**
			 * Legend note
			 */
			LegendNote: () => LocalizedString
			/**
			 * Display a rectangle under the legend
			 */
			DisplayBackgroundRectangle: () => LocalizedString
			/**
			 * Background rectangle color
			 */
			BackgroundRectangleColor: () => LocalizedString
			/**
			 * Background rectangle fill opacity
			 */
			BackgroundRectangleOpacity: () => LocalizedString
			/**
			 * Background rectangle stroke color
			 */
			BackgroundRectangleStrokeColor: () => LocalizedString
			/**
			 * Background rectangle stroke width
			 */
			BackgroundRectangleStrokeWidth: () => LocalizedString
			/**
			 * Background rectangle stroke opacity
			 */
			BackgroundRectangleStrokeOpacity: () => LocalizedString
			/**
			 * Legend orientation
			 */
			LegendOrientation: () => LocalizedString
			/**
			 * Horizontal
			 */
			LegendOrientationHorizontal: () => LocalizedString
			/**
			 * Vertical
			 */
			LegendOrientationVertical: () => LocalizedString
			/**
			 * Legend layout
			 */
			LegendSymbolLayout: () => LocalizedString
			/**
			 * Vertical
			 */
			LegendSymbolLayoutVertical: () => LocalizedString
			/**
			 * Horizontal
			 */
			LegendSymbolLayoutHorizontal: () => LocalizedString
			/**
			 * Stacked
			 */
			LegendSymbolLayoutStacked: () => LocalizedString
			/**
			 * Box width
			 */
			BoxWidth: () => LocalizedString
			/**
			 * Box height
			 */
			BoxHeight: () => LocalizedString
			/**
			 * Spacing between boxes
			 */
			BoxSpacing: () => LocalizedString
			/**
			 * Spacing between boxes and no data box
			 */
			BoxSpacingNoData: () => LocalizedString
			/**
			 * Label for the "no data" box
			 */
			NoDataLabel: () => LocalizedString
			/**
			 * Box corner radius
			 */
			BoxCornerRadius: () => LocalizedString
			/**
			 * Box stroke width
			 */
			BoxStrokeWidth: () => LocalizedString
			/**
			 * Round values
			 */
			RoundDecimals: () => LocalizedString
			/**
			 * More options...
			 */
			MoreOptions: () => LocalizedString
			/**
			 * Spacing between symbols
			 */
			SymbolsSpacing: () => LocalizedString
			/**
			 * Choice of values
			 */
			ChooseValues: () => LocalizedString
			/**
			 * Line length
			 */
			LineLength: () => LocalizedString
		}
	}
	CommonTextElement: {
		/**
		 * Font size
		 */
		FontSize: () => LocalizedString
		/**
		 * Font color
		 */
		FontColor: () => LocalizedString
		/**
		 * Font family
		 */
		FontFamily: () => LocalizedString
		/**
		 * Font weight
		 */
		FontWeight: () => LocalizedString
		/**
		 * Font style
		 */
		FontStyle: () => LocalizedString
		/**
		 * Normal
		 */
		Normal: () => LocalizedString
		/**
		 * Bold
		 */
		Bold: () => LocalizedString
		/**
		 * Italic
		 */
		Italic: () => LocalizedString
		/**
		 * Underline
		 */
		Underline: () => LocalizedString
	}
}

export type Formatters = {}
