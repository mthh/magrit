import type { BaseTranslation } from '../i18n-types';

const en = {
  StartApplication: 'Start Application',
  SuccessButton: 'Confirm',
  CancelButton: 'Cancel',
  DropFilesHere: 'Drop your file(s) here !',
  SupportedVectorFormats: 'Supported vector formats are: ESRI Shapefile (.shp, .shx, .dbf, .prf, .cpg), GeoJSON (.json ou .geojson), TopoJSON (.topojson ou .json), GML (.gml) and KML (.kml).',
  SupportedTabularFormats: 'Supported tabular formats are: Excel (.xls, .xlsx), CSV (.csv) and OpenDocument Spreadsheet (.ods).',
  UnsupportedFormat: 'Unsupported format',
  FilesDetected: '{{ One file detected | ?? files detected }}',
  ImportFiles: 'Import file(s)',
  Alerts: {
    DeleteLayer: 'Delete layer',
    SaveEditedData: 'Save changes ?',
    ReloadLastProject: 'A project was automatically saved when the page was closed on {}. Reload this project ?',
  },
  LeftMenu: {
    Import: 'Data import',
    MapConfiguration: 'Map configuration',
    LayerManager: 'Layer manager',
    RepresentationChoice: 'Representation choice',
    ExportSection: 'Map and data export',
  },
  ImportSection: {
    OpenGeospatialFile: 'Open geospatial file...',
    OpenTabularFile: 'Open tabular file...',
  },
  MapConfiguration: {
    Dimensions: 'Dimensions',
    Width: 'Width',
    Height: 'Height',
    Projection: 'Projection',
    MoreProjection: 'More projections',
    CustomProjection: 'Custom projection',
  },
  LayerManager: {
    point: 'Point layer',
    linestring: 'Line layer',
    polygon: 'Polygon layer',
    raster: 'Raster layer',
    table: 'Data table',
    Delete: 'Remove layer',
    AttributeTable: 'Attribute table',
    FitZoom: 'Zoom on layer',
    ToggleVisibility: 'Toggle visibility',
    Settings: 'Settings',
  },
  PortrayalSection: {
    RepresentationChoice: 'Representation choice',
    TargetLayer: 'Target layer',
    CreateLayer: 'Create layer',
    ResultName: 'Result name',
    NewLayer: 'New_layer',
    ChoroplethOptions: {
      Choropleth: 'Choropleth',
      Variable: 'Variable',
      Classification: 'Classification',
      ColorScheme: 'Color scheme',
      ColorSchemeInvert: 'Invert color scheme',
    },
  },
  ExportSection: {
    SelectLayers: 'Select a layer',
    SelectFormat: 'Select a format',
    SelectCRS: 'Select a CRS',
    Layers: 'Layers',
    Export: 'Export',
    ExportPng: 'Export as PNG',
    ExportSvg: 'Export as SVG',
    CustomCRS: 'Custom CRS',
  },
  LayerSettings: {
    LayerSettings: 'Layer settings',
    Name: 'Name',
    FillColor: 'Fill color',
    StrokeColor: 'Stroke color',
    FillOpacity: 'Fill opacity',
    StrokeOpacity: 'Stroke opacity',
    StrokeWidth: 'Stroke width',
    PointRadius: 'Point radius',
  },
  DataTable: {
    titleGeo: 'Attribute table',
    titleTabular: 'Data table',
    Features: '{{One feature | ?? features}}',
    Columns: '{{One column | ?? columns}}',
    ExportCsv: 'Export as CSV...',
  },
  FieldsTyping: {
    ModalTitle: 'Fields typing',
    FieldName: 'Field name',
    FieldType: 'Field type',
    VariableTypes: {
      identifier: 'Identifier',
      ratio: 'Ratio',
      stock: 'Stock',
      categorical: 'Categorical',
      unknown: 'Unknown',
    },
  },
  ClassificationPanel: {
    title: 'Classification',
    box: 'Box',
    histogram: 'Histogram',
    beeswarm: 'Beeswarm',
    dotHistogram: 'Dot histogram',
    distribution: 'Values distribution',
    summary: 'Summary',
    population: 'Population (non-null values)',
    minimum: 'Minimum',
    maximum: 'Maximum',
    mean: 'Mean',
    median: 'Median',
    standardDeviation: 'Standard deviation',
    variance: 'Variance',
    varianceCoefficient: 'Variance coefficient',
    skewness: 'Skewness',
    classification: 'Classification',
    classificationMethod: 'Classification method',
    classificationMethods: {
      equalInterval: 'Equal interval',
      quantile: 'Quantile',
      jenks: 'Jenks',
      standardDeviation: 'Standard deviation',
      q6: 'Q6',
      pretty: 'Pretty',
      geometricProgression: 'Geometric progression',
      arithmeticProgression: 'Arithmetic progression',
      headTail: 'Head/tail',
      manual: 'Manual',
    },
    numberOfClasses: 'Number of classes',
    meanPosition: 'Mean value position',
    meanPositionCenter: 'Class center',
    meanPositionBoundary: 'Class boundary',
    amplitude: 'Amplitude',
    howManyStdDev: 'standard deviations',
    logarithmicScale: 'Logarithmic scale',
    breaksInput: 'Enter class limits',
  },
} satisfies BaseTranslation;

export default en;
